%!PS-Adobe-2.0
%%Title: RTNv7n2.wn  -  /Users/ben/Info
%%Creator: WriteNow
%%CreationDate: Fri Mar  4 09:20:03 1994
%%For: ben
%%DocumentFonts: (atend)
%%Pages: 40 1
%%BoundingBox: (atend)
%%DocumentPaperSizes: Letter
%%Orientation: Portrait
%%NXNextStepVersion: 3.0
%%EndComments

%%BeginProcSet: /usr/lib/NextStep/printPackage.ps 3.0
%!
% NeXT Printing Package
% Version: 3.1
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{2 copy 3 ne or{_NXDoImageOp}{4 index dup 8 ne exch 4 ne and{_NXDoImageOp}{
		pop pop save 6 1 roll 12 dict begin/Proc exch def/Res 0 string def
		/Alloc{2 index length mul 2 add dup 2 index load length gt{1.2 mul round cvi string def}{pop pop}ifelse}def
		1 index 8 eq{/Unpack{.34 Alloc}def}{
			/Wid 4 index 3 mul def exch pop 8 exch/Str1 0 string def/Lim Wid def
			/Unpack{.67 Alloc/Str1 2 Alloc 0 exch Lim exch
				{dup -4 bitshift 17 mul Str1 exch 4 index exch put 15 and 17 mul Str1 exch 3 index 1 add exch put
				2 sub dup 0 le{0 lt Wid exch{exch 1 sub exch}if}if exch 2 add exch
				}forall/Lim exch def Str1 exch 0 exch getinterval
			}def
		}ifelse
		/Ops[{.3 mul add 1}{.59 mul add 2}{.11 mul add round cvi Res exch 2 index exch put 1 add 0.0 0}]def/Val 0.0 def/Phase 0 def
		{0 Val Phase Proc/Res Unpack{exch Ops exch get exec}forall/Phase exch def/Val exch def Res exch 0 exch getinterval}
		image end restore}ifelse}ifelse
	}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse
%%EndProcSet

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
-20 991 translate
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
%%PaperSize: Letter
%%EndSetup

%%Page: 1 1
%%PageBoundingBox: 0 0 612 792
%%PageFonts: (atend)
%%BeginPageSetup
%%PaperSize: Letter
/__NXsheetsavetoken save def
0 0 translate
gsave
-20 32071 translate
 /__NXbasematrix matrix currentmatrix def
grestore
gsave
0 setgray
/Helvetica findfont 12 scalefont [1 0 0 -1 0 0] makefont
8
exch
defineuserobject
8 execuserobject setfont
1 setlinewidth
[1 0 0 -1 0 32080] concat
0 31288 translate
%%EndPageSetup
gsave
0 0 612 792 rectclip
gsave
gsave
1 setgray 0 0 612 792 rectfill
/Times-BoldItalic findfont 48 scalefont [1 0 0 -1 0 0] makefont
23
exch
defineuserobject
23 execuserobject setfont
0 setgray
123 230 moveto (Ray Tracing News) show
/Times-Italic findfont 14 scalefont [1 0 0 -1 0 0] makefont
25
exch
defineuserobject
25 execuserobject setfont
248 294 moveto ("Light Makes Right") show
/Times-Roman findfont 13 scalefont [1 0 0 -1 0 0] makefont
26
exch
defineuserobject
26 execuserobject setfont
253 324 moveto (February 2.01, 1994) show
251 339 moveto (Volume 7, Number 2) show
/Times-Roman findfont 11 scalefont [1 0 0 -1 0 0] makefont
27
exch
defineuserobject
27 execuserobject setfont
172 668 moveto (All contents are copyright \(c\) 1994 by the individual authors) show
153 682 moveto (Archive locations:  anonymous FTP at princeton.edu \(128.112.128.1\)) show
142 696 moveto (/pub/Graphics/RTNews, wuarchive.wustl.edu:/graphics/graphics/RTNews,) show
269 710 moveto (and many others.) show
grestore
grestore
grestore
grestore
showpage
__NXsheetsavetoken restore
%%PageTrailer
%%DocumentFonts: Times-Roman
%%+ Times-Italic
%%+ Times-BoldItalic
%%+ Helvetica

%%Page: 2 2
%%PageBoundingBox: 0 0 612 792
%%PageFonts: (atend)
%%BeginPageSetup
%%PaperSize: Letter
/__NXsheetsavetoken save def
0 0 translate
gsave
-20 32071 translate
 /__NXbasematrix matrix currentmatrix def
grestore
gsave
0 setgray
/Helvetica findfont 12 scalefont [1 0 0 -1 0 0] makefont
8
exch
defineuserobject
8 execuserobject setfont
1 setlinewidth
[1 0 0 -1 0 32080] concat
0 31288 translate
%%EndPageSetup
gsave
0 0 612 792 rectclip
gsave
gsave
1 setgray 0 0 612 792 rectfill
/Times-Roman findfont 12 scalefont [1 0 0 -1 0 0] makefont
28
exch
defineuserobject
28 execuserobject setfont
0 setgray
72 85 moveto (Compiled by: ) show
90 105 moveto (Eric Haines) show
/Courier findfont 11 scalefont [1 0 0 -1 0 0] makefont
29
exch
defineuserobject
29 execuserobject setfont
146 105 moveto ( <erich@eye.com>) show
28 execuserobject setfont
90 124 moveto (3D/Eye Inc) show
90 145 moveto (1050 Craft Road) show
90 165 moveto (Ithaca, NY 14850) show
72 214 moveto (Contents:) show
90 234 moveto (Introduction) show
90 254 moveto (Ray Tracing Roundup) show
90 274 moveto (A Note on SPD Platform/Compiler Results \(SPARC II\), by David Hook) show
/Times-Italic findfont 12 scalefont [1 0 0 -1 0 0] makefont
30
exch
defineuserobject
30 execuserobject setfont
90 294 moveto (OORT) show
28 execuserobject setfont
121 294 moveto ( - Object Oriented Ray Tracer, by Nicholas Wilt [and Eric Haines]) show
90 314 moveto (Partial Evaluation Applied to Ray Tracing, by P.H. Andersen) show
90 334 moveto (Comparison of Ray Traversal Methods, by Erik Jansen) show
90 354 moveto (Sphere Tessellation//Gamma Correction, by Olin Lathrop) show
90 374 moveto (Computational Geometry On-Line Bibliography, by Bill Jones) show
90 394 moveto (Summary of Advanced Rendering Papers from Eurographics '93, by Erik Jansen) show
30 execuserobject setfont
90 414 moveto (RAT) show
28 execuserobject setfont
111 414 moveto (, Another Ray Tracer, by Tom Wilson) show
90 434 moveto (Fast Raytracing via ) show
30 execuserobject setfont
186 434 moveto (SEADS) show
28 execuserobject setfont
222 434 moveto (, by John Chapman and Wilfrid Lefer) show
90 454 moveto (Parallel Ray Tracing Schemes, by Rainer Menes) show
90 474 moveto (Notes on Parallel Ray Tracing, by Hsiu Lin and Sam Uselton) show
90 494 moveto (Parallel Texturing, by Jon Leech and Brian Corrie) show
90 514 moveto (Mapping Texture on a Sphere, by Ron Capelli) show
90 534 moveto (Computational Geometry in C, by Joseph O'Rourke) show
90 554 moveto (Programming for Graphics Files in C and C++, by John R Levine) show
90 574 moveto (Point in Polygon, the Quick Answer, by Wm. Randolph Franklin and Eric Haines) show
90 594 moveto (Elib and NetNews Information, by Eric Haines) show
90 614 moveto (CFP: 5th Eurographics Workshop on Rendering, by Georgios Sakas) show
90 634 moveto (CFP: 5th EG workshop on Animation & Simulation, by Gerard Hegron) show
90 654 moveto (Morphology Digest, by Henk Heijmans) show
90 674 moveto (Position of the Sun, by Joe Cychosz) show
grestore
grestore
grestore
grestore
showpage
__NXsheetsavetoken restore
%%PageTrailer
%%DocumentFonts: Times-Roman
%%+ Times-Italic
%%+ Courier
%%+ Helvetica

%%Page: 3 3
%%PageBoundingBox: 0 0 612 792
%%PageFonts: (atend)
%%BeginPageSetup
%%PaperSize: Letter
/__NXsheetsavetoken save def
0 0 translate
gsave
-20 32071 translate
 /__NXbasematrix matrix currentmatrix def
grestore
gsave
0 setgray
/Helvetica findfont 12 scalefont [1 0 0 -1 0 0] makefont
8
exch
defineuserobject
8 execuserobject setfont
1 setlinewidth
[1 0 0 -1 0 32080] concat
0 31288 translate
%%EndPageSetup
gsave
0 0 612 792 rectclip
gsave
gsave
1 setgray 0 0 612 792 rectfill
/Times-Bold findfont 13 scalefont [1 0 0 -1 0 0] makefont
31
exch
defineuserobject
31 execuserobject setfont
0 setgray
72 90 moveto (Introduction) show
/Times-Roman findfont 12 scalefont [1 0 0 -1 0 0] makefont
28
exch
defineuserobject
28 execuserobject setfont
72 130 moveto (In celebration of James Joyce's birthday, \(or is it Bloomsday, or) show
380 130 moveto 1 0 32 ( both?  I forget...\)  we're having) widthshow
72 150 moveto (a special two-for-one sale.  This issue is dedicated) show
313 150 moveto 1 0 32 ( to research issues and programmer resources.) widthshow
72 170 moveto 2 0 32 (It includes articles on a variety of rendering related) widthshow
333 170 moveto 3 0 32 ( topics, research article summaries, new) widthshow
72 190 moveto (books, etc.) show
124 190 moveto 1 0 32 (  The other issue \(v7n1\) is more for renderer users.  There was enough accumulated) widthshow
72 210 moveto 2 0 32 (stuff that I decided to try splitting things along) widthshow
311 210 moveto 3 0 32 ( these lines.  Let me know if the split was) widthshow
72 230 moveto (worthwhile.) show
72 270 moveto (There are some worthwhile resources and articles in this issue.  Nicholas Wilt's ray tracer in C++) show
72 290 moveto 4 0 32 (is now available on the net.  P.H. Andersen's progress report discusses) widthshow
455 290 moveto 5 0 32 ( an acceleration) widthshow
72 310 moveto 2 0 32 (technology I had not heard of before.) widthshow
262 310 moveto 3 0 32 (  Erik Jansen reports on some surprising results with) widthshow
72 330 moveto 1 0 32 (acceleration techniques he's) widthshow
209 330 moveto 2 0 32 ( exploring.  Olin Lathrop takes a position \("Gamma correction is) widthshow
72 350 moveto (largely a crock"\) which is both polemical) show
270 350 moveto 1 0 32 ( and practical.  There are also extracts from the net on) widthshow
72 370 moveto 2 0 32 (parallelism which I found interesting, along with some article summaries, new book listings,) widthshow
72 390 moveto (CFP's and whatnot.) show
72 430 moveto (Some things worth watching for) show
227 430 moveto 1 0 32 ( \(but haven't been released yet\) are "Graphics Gems IV" edited) widthshow
72 450 moveto 1 0 32 (by Paul Heckbert, Academic Press; Sillion & Puech's radiosity book from) widthshow
438 450 moveto 2 0 32 ( Morgan Kaufmann;) widthshow
72 470 moveto 2 0 32 (and Ian Ashdown's applied radiosity book.  Further) widthshow
334 470 moveto 3 0 32 ( on \(by SIGGRAPH, I assume\) will be) widthshow
72 490 moveto 3 0 32 (Glassner's digital image synthesis book from Morgan Kaufmann, the first full-length book) widthshow
72 510 moveto 1 0 32 (dedicated to) widthshow
131 510 moveto 2 0 32 ( computer graphics related theory.  If you know of anything I've missed, let me) widthshow
72 530 moveto (know.) show
grestore
grestore
grestore
grestore
showpage
__NXsheetsavetoken restore
%%PageTrailer
%%DocumentFonts: Times-Bold
%%+ Times-Roman
%%+ Helvetica

%%Page: 4 4
%%PageBoundingBox: 0 0 612 792
%%PageFonts: (atend)
%%BeginPageSetup
%%PaperSize: Letter
/__NXsheetsavetoken save def
0 0 translate
gsave
-20 32071 translate
 /__NXbasematrix matrix currentmatrix def
grestore
gsave
0 setgray
/Helvetica findfont 12 scalefont [1 0 0 -1 0 0] makefont
8
exch
defineuserobject
8 execuserobject setfont
1 setlinewidth
[1 0 0 -1 0 32080] concat
0 31288 translate
%%EndPageSetup
gsave
0 0 612 792 rectclip
gsave
gsave
1 setgray 0 0 612 792 rectfill
/Times-Bold findfont 13 scalefont [1 0 0 -1 0 0] makefont
31
exch
defineuserobject
31 execuserobject setfont
0 setgray
72 87 moveto (Ray Tracing Roundup) show
/Times-Bold findfont 12 scalefont [1 0 0 -1 0 0] makefont
32
exch
defineuserobject
32 execuserobject setfont
72 124 moveto (Updated Ray Tracing and Radiosity Bibliographies) show
/Times-Roman findfont 12 scalefont [1 0 0 -1 0 0] makefont
28
exch
defineuserobject
28 execuserobject setfont
72 162 moveto 2 0 32 (The free ray tracing and) widthshow
195 162 moveto 3 0 32 ( radiosity bibliographies which I maintain have been updated with) widthshow
72 181 moveto 13 0 32 (references from 1993.  These are at ) widthshow
/Courier findfont 11 scalefont [1 0 0 -1 0 0] makefont
29
exch
defineuserobject
29 execuserobject setfont
336 181 moveto 13 0 32 (princeton.edu ) widthshow
28 execuserobject setfont
441 181 moveto 13 0 32 (in the directory) widthshow
29 execuserobject setfont
72 199 moveto (/pub/Graphics/Papers.  ) show
28 execuserobject setfont
224 199 moveto (The files are) show
29 execuserobject setfont
284 199 moveto ( RayBib.10.93.Z) show
28 execuserobject setfont
383 199 moveto ( and ) show
29 execuserobject setfont
406 199 moveto (RadBib.10.93.Z) show
28 execuserobject setfont
72 238 moveto (\(Eric Haines\)) show
72 276 moveto (-------------------------------------------------------------------------------) show
32 execuserobject setfont
72 314 moveto (References to Blobby Models, Metaballs, etc.) show
28 execuserobject setfont
72 352 moveto 1 0 32 (The following) widthshow
141 352 moveto 2 0 32 ( is a bibliography on particle systems compiled by David Breen at Rensselaer,) widthshow
72 371 moveto (myself, and Bill Gates) show
179 371 moveto 1 0 32 ( at UBC.  Blobby objects and metaballs are one type of particle systems.) widthshow
72 390 moveto 1 0 32 (This bibliography has been printed as part) widthshow
280 390 moveto 2 0 32 ( of the SIGGRAPH'92 course #16 notes:  "Particle) widthshow
72 409 moveto (System Modeling, Animation, and Physically Based Techniques".) show
72 447 moveto (\(Dave Tonnesen, ) show
29 execuserobject setfont
157 447 moveto (davet@dgp.toronto.edu) show
28 execuserobject setfont
295 447 moveto (\)) show
72 485 moveto 2 0 32 ([) widthshow
/Times-Italic findfont 12 scalefont [1 0 0 -1 0 0] makefont
30
exch
defineuserobject
30 execuserobject setfont
76 485 moveto 2 0 32 (I do not include the) widthshow
177 485 moveto 3 0 32 ( bibliography here because it is \(surprisingly\) long.  If you want it, ) widthshow
90 504 moveto (you can ask me for a copy.  -EAH) show
28 execuserobject setfont
252 504 moveto (]) show
72 542 moveto (-------------------------------------------------------------------------------) show
31 execuserobject setfont
72 581 moveto (A Note on SPD Platform/Compiler Results \(SPARC II\)) show
28 execuserobject setfont
377 581 moveto (, by David Hook) show
90 599 moveto (\() show
29 execuserobject setfont
94 599 moveto (dgh@ecr.mu.oz.au) show
28 execuserobject setfont
200 599 moveto (\)) show
72 637 moveto (With the tweaked benchmarks in RTNv6n3 we removed the backing polygon altogether from) show
521 637 moveto 1 0 32 ( the) widthshow
72 656 moveto 1 0 32 (scene - we did this because we were interested in measuring the) widthshow
389 656 moveto 2 0 32 ( effect of having such a large) widthshow
72 675 moveto (object in the scene.) show
72 713 moveto (-------------------------------------------------------------------------------) show
grestore
grestore
grestore
grestore
showpage
__NXsheetsavetoken restore
%%PageTrailer
%%DocumentFonts: Times-Bold
%%+ Times-Roman
%%+ Times-Italic
%%+ Courier
%%+ Helvetica

%%Page: 5 5
%%PageBoundingBox: 0 0 612 792
%%PageFonts: (atend)
%%BeginPageSetup
%%PaperSize: Letter
/__NXsheetsavetoken save def
0 0 translate
gsave
-20 32071 translate
 /__NXbasematrix matrix currentmatrix def
grestore
gsave
0 setgray
/Helvetica findfont 12 scalefont [1 0 0 -1 0 0] makefont
8
exch
defineuserobject
8 execuserobject setfont
1 setlinewidth
[1 0 0 -1 0 32080] concat
0 31288 translate
%%EndPageSetup
gsave
0 0 612 792 rectclip
gsave
gsave
1 setgray 0 0 612 792 rectfill
/Times-BoldItalic findfont 13 scalefont [1 0 0 -1 0 0] makefont
33
exch
defineuserobject
33 execuserobject setfont
0 setgray
72 100 moveto (OORT) show
/Times-Bold findfont 13 scalefont [1 0 0 -1 0 0] makefont
31
exch
defineuserobject
31 execuserobject setfont
107 100 moveto ( - Object Oriented Ray Tracer, ) show
/Times-Roman findfont 12 scalefont [1 0 0 -1 0 0] makefont
28
exch
defineuserobject
28 execuserobject setfont
282 100 moveto (by Nicholas Wilt [and Eric Haines]) show
72 120 moveto ( ) show
90 120 moveto (\() show
/Courier findfont 11 scalefont [1 0 0 -1 0 0] makefont
29
exch
defineuserobject
29 execuserobject setfont
94 120 moveto (75210.2455@compuserve.com) show
28 execuserobject setfont
259 120 moveto (\)) show
72 160 moveto ([I have also woven in my own comments about the book and code into this) show
432 160 moveto 1 0 32 ( announcement.  Nick) widthshow
72 180 moveto (is nice enough to make the code available for free on the net,) show
364 180 moveto 1 0 32 ( as the disk does not come with the) widthshow
72 200 moveto (book and normally costs $33 more!]) show
72 240 moveto 3 0 32 ([) widthshow
/Times-Italic findfont 12 scalefont [1 0 0 -1 0 0] makefont
30
exch
defineuserobject
30 execuserobject setfont
76 240 moveto 3 0 32 (The code) widthshow
123 240 moveto 4 0 32 ( for Nick's book is now available at the following sites as ) widthshow
/Courier-Oblique findfont 11 scalefont [1 0 0 -1 0 0] makefont
34
exch
defineuserobject
34 execuserobject setfont
449 240 moveto 4 0 32 (oort10.zip) widthshow
30 execuserobject setfont
515 240 moveto 4 0 32 ( and) widthshow
/Courier-Oblique findfont 12 scalefont [1 0 0 -1 0 0] makefont
35
exch
defineuserobject
35 execuserobject setfont
72 259 moveto (oort10.tar.Z) show
30 execuserobject setfont
158 259 moveto (:) show
34 execuserobject setfont
90 280 moveto (wuarchive.wustl.edu:/graphic/graphics/ray) show
90 299 moveto (ftp.funet.fi:pub/graphics/packages/ray-tracing/oort) show
90 319 moveto (gondwana.ecr.mu.oz.au \(128.250.70.62\):/pub) show
30 execuserobject setfont
72 340 moveto (-EAH) show
28 execuserobject setfont
99 340 moveto (]) show
72 380 moveto (Extracted from the README:) show
72 400 moveto (     This distribution contains the source) show
262 400 moveto 1 0 32 ( code that accompanies my book, ) widthshow
/Times-Bold findfont 12 scalefont [1 0 0 -1 0 0] makefont
32
exch
defineuserobject
32 execuserobject setfont
431 400 moveto 1 0 32 (Object-Oriented Ray) widthshow
72 420 moveto (Tracing in C++) show
28 execuserobject setfont
151 420 moveto (.  If you are interested in ray tracing, or if you want to understand ) show
30 execuserobject setfont
468 420 moveto (OORT) show
28 execuserobject setfont
499 420 moveto ( in) show
512 420 moveto 1 0 32 ( more) widthshow
72 440 moveto 1 0 32 (detail, you can call John) widthshow
192 440 moveto 2 0 32 ( Wiley & Sons at 1-800-CALLWILEY \(1-800-225-5945\) to order it.) widthshow
72 460 moveto (Alternatively, you can find it in a local bookstore or have) show
347 460 moveto 1 0 32 ( them order it for you \(ISBN 0471 304) widthshow
72 480 moveto (158, $36.95\).) show
72 520 moveto 1 0 32 ([) widthshow
30 execuserobject setfont
76 520 moveto 1 0 32 (I proof-read much of this book.  It's good for the serious novice programmer wanting to do a) widthshow
72 540 moveto 1 0 32 (ray tracer \(the C++ code also seems nice,) widthshow
282 540 moveto 2 0 32 ( but I'm just a beginner here\); though it's a trade) widthshow
72 560 moveto 2 0 32 (paperback, it's well referenced \(for a switch\).  It) widthshow
321 560 moveto 3 0 32 ( follows mainstream professional practices) widthshow
72 580 moveto (instead of amateur inventions.  The layout and illustrations are nothing to) show
427 580 moveto 1 0 32 ( write home about, but) widthshow
72 600 moveto 2 0 32 (suffice.  The first two thirds of the book walks through the topics below, the) widthshow
461 600 moveto 3 0 32 ( last third is a) widthshow
72 620 moveto (reference manual for the OORT class library) show
289 620 moveto 1 0 32 ( and appendices for an intro to C++, GIF display,) widthshow
72 640 moveto 1 0 32 (scene examples, file formats, etc.  The code per page amount is around 65% code for) widthshow
496 640 moveto 2 0 32 ( the first) widthshow
72 660 moveto (two thirds of the book, which is pretty high as these things go but is) show
396 660 moveto 1 0 32 ( pretty reasonable for a book) widthshow
72 680 moveto (presenting C++ for novices.  Also, the code is well commented, so it's usually not) show
465 680 moveto 1 0 32 ( just pages and) widthshow
72 700 moveto (pages of tokens.  -EAH) show
28 execuserobject setfont
182 700 moveto (]) show
grestore
grestore
grestore
grestore
showpage
__NXsheetsavetoken restore
%%PageTrailer
%%DocumentFonts: Courier-Oblique
%%+ Times-Bold
%%+ Times-Roman
%%+ Times-Italic
%%+ Courier
%%+ Times-BoldItalic
%%+ Helvetica

%%Page: 6 6
%%PageBoundingBox: 0 0 612 792
%%PageFonts: (atend)
%%BeginPageSetup
%%PaperSize: Letter
/__NXsheetsavetoken save def
0 0 translate
gsave
-20 32071 translate
 /__NXbasematrix matrix currentmatrix def
grestore
gsave
0 setgray
/Helvetica findfont 12 scalefont [1 0 0 -1 0 0] makefont
8
exch
defineuserobject
8 execuserobject setfont
1 setlinewidth
[1 0 0 -1 0 32080] concat
0 31288 translate
%%EndPageSetup
gsave
0 0 612 792 rectclip
gsave
gsave
1 setgray 0 0 612 792 rectfill
/Times-Roman findfont 12 scalefont [1 0 0 -1 0 0] makefont
28
exch
defineuserobject
28 execuserobject setfont
0 setgray
72 90 moveto (     The book) show
133 90 moveto 1 0 32 ( assumes some knowledge of 3D computer graphics.  It includes lots of references) widthshow
72 110 moveto (so readers can pursue their own research, too.  The topics covered include the following:) show
90 150 moveto (-) show
108 150 moveto (Vectors and matrices for computer graphics.) show
90 190 moveto (-) show
108 190 moveto (Standard Hall shading model with ambient, diffuse, specular, reflective and ) show
108 210 moveto (transparent components.) show
90 250 moveto (-) show
108 250 moveto (Rendering various primitives \(planes, rings, polygons, spheres, bounding boxes, ) show
108 270 moveto (quadrics, CSG and algebraic surfaces\).) show
90 310 moveto (-) show
108 310 moveto (Ray tracing acceleration.  ) show
/Times-Italic findfont 12 scalefont [1 0 0 -1 0 0] makefont
30
exch
defineuserobject
30 execuserobject setfont
234 310 moveto (OORT) show
28 execuserobject setfont
265 310 moveto ( implements Goldsmith and Salmon's automatic ) show
108 330 moveto (bounding volume hierarchy generation for speed.  It also includes a hand-coded ) show
108 350 moveto (80x87 assembler routine to intersect a ray with a bounding box.) show
90 390 moveto (-) show
108 390 moveto (Texture mapping.  Procedural and solid texturing is described.  ) show
30 execuserobject setfont
413 390 moveto (OORT) show
28 execuserobject setfont
445 390 moveto ( implements ) show
108 410 moveto (a bunch of inverse mappings \(sphere, cone, cylinder, quadrilateral, circle\).) show
90 450 moveto (-) show
108 450 moveto (Distribution ray tracing for antialiasing, soft shadows, and imperfectly reflective ) show
108 470 moveto (and translucent objects.) show
90 510 moveto (-) show
108 510 moveto (Statistical optimization to make the distribution ray tracing go faster.) show
72 550 moveto (     ) show
30 execuserobject setfont
87 550 moveto (OORT) show
28 execuserobject setfont
118 550 moveto ( is a class library for ray tracing. ) show
277 550 moveto 1 0 32 ( As such, it does not implement an input language or) widthshow
72 570 moveto 1 0 32 (interactive user interface.  Currently, images are described to the ray tracer using calls into) widthshow
520 570 moveto 2 0 32 ( the) widthshow
72 590 moveto (class library.  This is surprisingly painless; unlike C code, C++ is) show
385 590 moveto 1 0 32 ( almost as intuitive as the input) widthshow
72 610 moveto 1 0 32 (language of a ray) widthshow
158 610 moveto 2 0 32 ( tracer.  In addition, C++ is much more powerful than any ray tracer input) widthshow
72 630 moveto 2 0 32 (language; it has loop constructs, functions and support for abstract data types.  Finally, C++) widthshow
72 650 moveto 2 0 32 (debugging tools are much more sophisticated than the debugging tools that are available) widthshow
520 650 moveto 3 0 32 ( for) widthshow
72 670 moveto (proprietary ray tracer input languages.) show
72 710 moveto 1 0 32 (     All these protestations are not to say that no) widthshow
311 710 moveto 2 0 32 ( interactive user interface for ) widthshow
30 execuserobject setfont
462 710 moveto 2 0 32 (OORT) widthshow
28 execuserobject setfont
493 710 moveto 2 0 32 ( is in the) widthshow
grestore
grestore
grestore
grestore
showpage
__NXsheetsavetoken restore
%%PageTrailer
%%DocumentFonts: Times-Roman
%%+ Times-Italic
%%+ Helvetica

%%Page: 7 7
%%PageBoundingBox: 0 0 612 792
%%PageFonts: (atend)
%%BeginPageSetup
%%PaperSize: Letter
/__NXsheetsavetoken save def
0 0 translate
gsave
-20 32071 translate
 /__NXbasematrix matrix currentmatrix def
grestore
gsave
0 setgray
/Helvetica findfont 12 scalefont [1 0 0 -1 0 0] makefont
8
exch
defineuserobject
8 execuserobject setfont
1 setlinewidth
[1 0 0 -1 0 32080] concat
0 31288 translate
%%EndPageSetup
gsave
0 0 612 792 rectclip
gsave
gsave
1 setgray 0 0 612 792 rectfill
/Times-Roman findfont 12 scalefont [1 0 0 -1 0 0] makefont
28
exch
defineuserobject
28 execuserobject setfont
0 setgray
72 90 moveto 1 0 32 (works.  I plan to develop an interactive user interface for ) widthshow
/Times-Italic findfont 12 scalefont [1 0 0 -1 0 0] makefont
30
exch
defineuserobject
30 execuserobject setfont
358 90 moveto 1 0 32 (OORT) widthshow
28 execuserobject setfont
389 90 moveto 1 0 32 (,) widthshow
392 90 moveto 2 0 32 ( and may provide parsers for) widthshow
72 110 moveto (other ray tracers' input languages.  But for) show
276 110 moveto 1 0 32 ( now, if you want to make pictures using ) widthshow
30 execuserobject setfont
484 110 moveto 1 0 32 (OORT) widthshow
28 execuserobject setfont
515 110 moveto 1 0 32 (, you) widthshow
72 130 moveto (have to develop in C++.) show
72 170 moveto 1 0 32 ([) widthshow
30 execuserobject setfont
76 170 moveto 1 0 32 (If you want to make pretty pictures, get POV, Polyray, Rayshade, etc.  If you) widthshow
458 170 moveto 2 0 32 ( want to look at) widthshow
72 190 moveto (some nice C++ code for a vector & matrix) show
278 190 moveto 1 0 32 ( library, etc, check this code out.  Note that the code) widthshow
72 210 moveto (does use templates \(which some C++ compilers don't have yet,) show
377 210 moveto 1 0 32 ( Microsoft's included\).  Also, it's) widthshow
72 230 moveto (interesting to note that this code is easier) show
270 230 moveto 1 0 32 ( to integrate into existing software packages since it is) widthshow
72 250 moveto 2 0 32 (procedure driven \(unlike most free ray tracers) widthshow
307 250 moveto 3 0 32 ( out there which are input language driven\).) widthshow
72 270 moveto 2 0 32 (Finally, this book is worthwhile as an) widthshow
265 270 moveto 3 0 32 ( example of a serious C++ application.  Personally,) widthshow
72 290 moveto 2 0 32 (learning C++ by examining the trivial) widthshow
267 290 moveto 3 0 32 ( examples in most books is useful for understanding) widthshow
72 310 moveto (syntax, but grokking the true power of OO is easier when examining a full-blown ray) show
480 310 moveto 1 0 32 ( tracer built) widthshow
72 330 moveto (in C++.) show
112 330 moveto 1 0 32 (  There are times when a pure object orientation is not used in this code for simplicity) widthshow
72 350 moveto (\(e.g. bounding boxes are treated differently\), but otherwise it's pleasantly polymorphic. -EAH) show
28 execuserobject setfont
523 350 moveto (]) show
72 390 moveto (Nicholas Wilt writes:) show
72 430 moveto (There are two versions of ) show
30 execuserobject setfont
198 430 moveto (OORT) show
28 execuserobject setfont
229 430 moveto (.  The June 1993 version) show
347 430 moveto 1 0 32 ( was cut for the book. The only people) widthshow
72 450 moveto (who can get their hands on the June build are those who buy the book/disk set from Wiley.) show
72 490 moveto 2 0 32 (The freeware distribution was) widthshow
222 490 moveto 3 0 32 ( cut in late 1993 \(November or December\).  The differences) widthshow
72 510 moveto (between the book distribution and the freeware distribution are minimal:) show
72 550 moveto (1\) The book distribution contains a shareware GIF viewer, but the freeware distribution does) show
517 550 moveto 1 0 32 ( not ) widthshow
90 570 moveto (\(I figure anyone who can get their hands on the freeware distribution has ) show
489 570 moveto (access to a) show
90 590 moveto (GIF viewer of their own\).) show
72 630 moveto 2 0 32 (2\) The freeware distribution has a few fixes to make ) widthshow
30 execuserobject setfont
346 630 moveto 2 0 32 (OORT) widthshow
28 execuserobject setfont
377 630 moveto 2 0 32 ( compatible with) widthshow
462 630 moveto 3 0 32 ( Borland C++ ) widthshow
90 650 moveto 2 0 32 (4.0.  The number of lines of code affected can be counted on one hand, but the source ) widthshow
90 670 moveto (code won't compile as is for BC++ 4.0.) show
72 710 moveto 1 0 32 (The "official," current version of ) widthshow
30 execuserobject setfont
237 710 moveto 1 0 32 (OORT) widthshow
28 execuserobject setfont
269 710 moveto 1 0 32 ( is the freeware distribution) widthshow
405 710 moveto 2 0 32 ( \(again, the differences are) widthshow
grestore
grestore
grestore
grestore
showpage
__NXsheetsavetoken restore
%%PageTrailer
%%DocumentFonts: Times-Roman
%%+ Times-Italic
%%+ Helvetica

%%Page: 8 8
%%PageBoundingBox: 0 0 612 792
%%PageFonts: (atend)
%%BeginPageSetup
%%PaperSize: Letter
/__NXsheetsavetoken save def
0 0 translate
gsave
-20 32071 translate
 /__NXbasematrix matrix currentmatrix def
grestore
gsave
0 setgray
/Helvetica findfont 12 scalefont [1 0 0 -1 0 0] makefont
8
exch
defineuserobject
8 execuserobject setfont
1 setlinewidth
[1 0 0 -1 0 32080] concat
0 31288 translate
%%EndPageSetup
gsave
0 0 612 792 rectclip
gsave
gsave
1 setgray 0 0 612 792 rectfill
/Times-Roman findfont 12 scalefont [1 0 0 -1 0 0] makefont
28
exch
defineuserobject
28 execuserobject setfont
0 setgray
72 80 moveto (minimal\).) show
72 120 moveto (Nicholas Wilt also writes about what he's up to now:) show
72 160 moveto (I've been working on the C++ code lately, though not on the) show
363 160 moveto 1 0 32 ( rendering engine. I want an object-) widthshow
72 180 moveto (oriented framework for 3D rendering that decouples) show
323 180 moveto 1 0 32 ( the rendering technique from the modelling) widthshow
72 200 moveto 2 0 32 (and quantization and display.  That led me to develop) widthshow
347 200 moveto 3 0 32 ( an interactive modelling and display) widthshow
72 220 moveto 1 0 32 (program for Microsoft Windows and Windows NT \(I got tired) widthshow
381 220 moveto 2 0 32 ( of writing C++ source code to) widthshow
72 240 moveto (render images\).  You professionals won't be too excited, but there) show
389 240 moveto 1 0 32 ( are lots of ray tracing wienies) widthshow
72 260 moveto (here on CompuServe that might be :-\).) show
72 300 moveto (Windows is a good environment for this stuff, because it has dynamic linking built in.  If I) show
506 300 moveto 1 0 32 ( do the) widthshow
72 320 moveto (renderer right, it should be very configurable and extensible.  NT) show
385 320 moveto 1 0 32 ( has symmetric multiprocessing) widthshow
72 340 moveto 1 0 32 (and a multitude of networking models built in \(RPC, named pipes, sockets, to name a few\), so) widthshow
72 360 moveto (doing a parallel ray tracer should be a snap.) show
72 400 moveto (I got tired of waiting for ray tracings to finish, so I did a Z-buffering polygonal renderer.) show
72 440 moveto (-------------------------------------------------------------------------------) show
/Times-Bold findfont 13 scalefont [1 0 0 -1 0 0] makefont
31
exch
defineuserobject
31 execuserobject setfont
72 480 moveto (Partial Evaluation Applied to Ray Tracing) show
28 execuserobject setfont
309 480 moveto (, by P.H. Andersen \() show
/Courier findfont 11 scalefont [1 0 0 -1 0 0] makefont
29
exch
defineuserobject
29 execuserobject setfont
407 480 moveto (txix@diku.dk) show
28 execuserobject setfont
486 480 moveto (\)) show
72 520 moveto (I have implemented a simple ray) show
229 520 moveto 1 0 32 ( tracer in C, and optimized it by partial evaluation to run twice) widthshow
72 540 moveto 1 0 32 (as fast.  The unoptimized program is faster than Rayshade) widthshow
360 540 moveto 2 0 32 ( 4.0.6 measured on raw intersection) widthshow
72 560 moveto (speed.) show
72 600 moveto (I am currently working on optimizing Rayshade by partial evaluation.) show
72 640 moveto (Below is a short description of partial evaluation and the application to ray tracing.) show
/Times-Bold findfont 12 scalefont [1 0 0 -1 0 0] makefont
32
exch
defineuserobject
32 execuserobject setfont
72 680 moveto (Partial Evaluation) show
28 execuserobject setfont
72 720 moveto 4 0 32 (Partial evaluation is a general and automatic program) widthshow
356 720 moveto 5 0 32 ( transformation technique that can) widthshow
grestore
grestore
grestore
grestore
showpage
__NXsheetsavetoken restore
%%PageTrailer
%%DocumentFonts: Times-Bold
%%+ Times-Roman
%%+ Courier
%%+ Helvetica

%%Page: 9 9
%%PageBoundingBox: 0 0 612 792
%%PageFonts: (atend)
%%BeginPageSetup
%%PaperSize: Letter
/__NXsheetsavetoken save def
0 0 translate
gsave
-20 32071 translate
 /__NXbasematrix matrix currentmatrix def
grestore
gsave
0 setgray
/Helvetica findfont 12 scalefont [1 0 0 -1 0 0] makefont
8
exch
defineuserobject
8 execuserobject setfont
1 setlinewidth
[1 0 0 -1 0 32080] concat
0 31288 translate
%%EndPageSetup
gsave
0 0 612 792 rectclip
gsave
gsave
1 setgray 0 0 612 792 rectfill
/Times-Roman findfont 12 scalefont [1 0 0 -1 0 0] makefont
28
exch
defineuserobject
28 execuserobject setfont
0 setgray
72 90 moveto (specialize programs with respect some of their input data.) show
72 130 moveto 1 0 32 (A partial evaluator is a program which, when given a program and some of) widthshow
445 130 moveto 2 0 32 ( its input data \(the) widthshow
72 150 moveto (static data\), produces a specialized program.  Running) show
332 150 moveto 1 0 32 ( the specialized program on the remaining) widthshow
72 170 moveto (input data \(the dynamic data\) yields the same results as running the original program) show
479 170 moveto 1 0 32 ( on all of its) widthshow
72 190 moveto 1 0 32 (input data.  A partial) widthshow
175 190 moveto 2 0 32 ( evaluator unrolls loops, unfolds function calls, precomputes expressions) widthshow
72 210 moveto (that only depend on static data, and reduces expressions depending on dynamic data.  The) show
503 210 moveto 1 0 32 ( benefit) widthshow
72 230 moveto 1 0 32 (of partial evaluation is speed of execution: the specialized program is often) widthshow
443 230 moveto 2 0 32 ( significantly faster) widthshow
72 250 moveto (than the general program.  Refer to [5] for a general introduction to partial evaluation.) show
72 290 moveto (For this project we use a partial evaluator for C called C-Mix [1], [2], [3].) show
/Times-Bold findfont 12 scalefont [1 0 0 -1 0 0] makefont
32
exch
defineuserobject
32 execuserobject setfont
72 330 moveto (Ray Tracing) show
28 execuserobject setfont
72 370 moveto 1 0 32 (The usual implementation is by a general algorithm which, given) widthshow
394 370 moveto 2 0 32 ( a scene and a ray, performs) widthshow
72 390 moveto (computation to follow its path.  The main loop of the ray tracing algorithm could look like this:) show
/Courier findfont 10 scalefont [1 0 0 -1 0 0] makefont
36
exch
defineuserobject
36 execuserobject setfont
90 430 moveto (for each pixel \(x,y\) in the picture do) show
108 448 moveto (ray = <compute the primary ray using \(x,y\)>;) show
108 468 moveto (color = trace\(scene, ray\);) show
108 488 moveto (plot\(x, y, color\);) show
28 execuserobject setfont
72 530 moveto (Since trace) show
125 530 moveto 1 0 32 ( calls itself recursively to model reflected and refracted light, the algorithm is rather) widthshow
72 550 moveto (time consuming.) show
32 execuserobject setfont
72 590 moveto (Partial Evaluation Applied to Ray Tracing) show
28 execuserobject setfont
72 630 moveto 1 0 32 (In all calls to the function trace) widthshow
227 630 moveto 2 0 32 ( the scene is the same, which makes partial evaluation highly) widthshow
72 650 moveto 1 0 32 (relevant.  Thus we specify that scene is static and ray is dynamic.  Given the program) widthshow
498 650 moveto 2 0 32 ( and the) widthshow
72 670 moveto 1 0 32 (static scene data the partial evaluator will produce a specialized program, where the main) widthshow
513 670 moveto 2 0 32 ( loop) widthshow
72 690 moveto (will look like this:) show
grestore
grestore
grestore
grestore
showpage
__NXsheetsavetoken restore
%%PageTrailer
%%DocumentFonts: Times-Bold
%%+ Times-Roman
%%+ Courier
%%+ Helvetica

%%Page: 10 10
%%PageBoundingBox: 0 0 612 792
%%PageFonts: (atend)
%%BeginPageSetup
%%PaperSize: Letter
/__NXsheetsavetoken save def
0 0 translate
gsave
-20 32071 translate
 /__NXbasematrix matrix currentmatrix def
grestore
gsave
0 setgray
/Helvetica findfont 12 scalefont [1 0 0 -1 0 0] makefont
8
exch
defineuserobject
8 execuserobject setfont
1 setlinewidth
[1 0 0 -1 0 32080] concat
0 31288 translate
%%EndPageSetup
gsave
0 0 612 792 rectclip
gsave
gsave
1 setgray 0 0 612 792 rectfill
/Courier findfont 10 scalefont [1 0 0 -1 0 0] makefont
36
exch
defineuserobject
36 execuserobject setfont
0 setgray
90 90 moveto (for each pixel \(x,y\) in the picture do) show
108 108 moveto (ray = <compute primary ray using \(x,y\)>;) show
108 128 moveto (color = trace_scene\(ray\);) show
108 148 moveto (plot\(x, y, color\);) show
/Times-Roman findfont 12 scalefont [1 0 0 -1 0 0] makefont
28
exch
defineuserobject
28 execuserobject setfont
72 190 moveto (The function trace_scene is a version of trace, which is) show
336 190 moveto 1 0 32 ( specialized with respect to the scene.  In) widthshow
72 210 moveto (other words:  trace_scene is a new function, which is only good for tracing rays in this one) show
506 210 moveto 1 0 32 ( scene,) widthshow
72 230 moveto (but which is often faster than the general algorithm.) show
72 270 moveto (If the picture generated is big enough,) show
254 270 moveto 1 0 32 ( the time to specialize plus the time to run the specialized) widthshow
72 290 moveto (program will be less than the time to run the original program \(often true, since we) show
469 290 moveto 1 0 32 ( all know how) widthshow
72 310 moveto (time consuming ray tracing can be!\).  Further, in situations) show
354 310 moveto 1 0 32 ( where the specialized program is run) widthshow
72 330 moveto (more than one time, the gain is much greater of course.  This is especially the case for animations) show
72 350 moveto 1 0 32 (where only the viewpoint changes and/or only part of the scene) widthshow
386 350 moveto 2 0 32 ( changes.  Another example is) widthshow
72 370 moveto 3 0 32 (interactive design where one wants to try out different surface data, light) widthshow
453 370 moveto 4 0 32 ( sources, or eye) widthshow
72 390 moveto (positions.) show
/Times-Bold findfont 12 scalefont [1 0 0 -1 0 0] makefont
32
exch
defineuserobject
32 execuserobject setfont
72 430 moveto (Related Work) show
28 execuserobject setfont
72 470 moveto 1 0 32 (Mogensen specialized a very modular ray tracer written in) widthshow
360 470 moveto 2 0 32 ( a functional language [6], showing) widthshow
72 490 moveto (that the administrative overhead can be removed by partial evaluation.) show
72 530 moveto (Hanrahan has a `surface compiler' which accepts as input the equation of a) show
72 550 moveto (surface and outputs the intersection code as a series of C statements [4].  He) show
72 570 moveto (reports speedup of 20 %.) show
32 execuserobject setfont
72 610 moveto (References) show
28 execuserobject setfont
72 650 moveto ([1] Andersen, L.O.  Partial Evaluation of C and Automatic Compiler Generation) show
72 670 moveto (    \(Extend Abstract\).  Compiler Construction, Paderborn, Germany.  October) show
72 690 moveto (    1992.  \(Lecture Notes in Computer Science, vol. 641\).) show
grestore
grestore
grestore
grestore
showpage
__NXsheetsavetoken restore
%%PageTrailer
%%DocumentFonts: Times-Bold
%%+ Times-Roman
%%+ Courier
%%+ Helvetica

%%Page: 11 11
%%PageBoundingBox: 0 0 612 792
%%PageFonts: (atend)
%%BeginPageSetup
%%PaperSize: Letter
/__NXsheetsavetoken save def
0 0 translate
gsave
-20 32071 translate
 /__NXbasematrix matrix currentmatrix def
grestore
gsave
0 setgray
/Helvetica findfont 12 scalefont [1 0 0 -1 0 0] makefont
8
exch
defineuserobject
8 execuserobject setfont
1 setlinewidth
[1 0 0 -1 0 32080] concat
0 31288 translate
%%EndPageSetup
gsave
0 0 612 792 rectclip
gsave
gsave
1 setgray 0 0 612 792 rectfill
/Times-Roman findfont 12 scalefont [1 0 0 -1 0 0] makefont
28
exch
defineuserobject
28 execuserobject setfont
0 setgray
72 80 moveto ([2] Andersen, L.O.  Self-Applicable C Program Specialization.  Proc. of ACM) show
72 100 moveto (    Symposium on Partial Evaluation and Sematics-Based Program Manipulation,) show
72 120 moveto (    PEPM'92.  1992.) show
72 160 moveto ([3] Andersen, L.O.  Binding-Time Analysis and the Taming of C Pointers.  Proc.) show
72 180 moveto (    of ACM Symposium on Partial Evaluation and Sematics-Based Program) show
72 200 moveto (    Manipulation, PEPM'93.  1993.) show
72 240 moveto ([4] Hanrahan, Pat.  Ray Tracing Algebraic Surfaces.  Computer Graphics, Volume) show
72 260 moveto (    17, Number 3.  July 1983.) show
72 300 moveto ([5] Jones, N.D., Gomard, C.K, and Sestoft, P.  Partial Evaluation and) show
72 320 moveto (    Automatic Program Generation.  Prentice-Hall.  1993.) show
72 360 moveto ([6] Mogensen, Torben.  The application of Partial Evaluation to Ray-Tracing.) show
72 380 moveto (    Master Thesis, University of Copenhagen, Dept. of Computer Science, DIKU.) show
72 400 moveto (    1986.) show
72 440 moveto (-------------------------------------------------------------------------------) show
/Times-Bold findfont 13 scalefont [1 0 0 -1 0 0] makefont
31
exch
defineuserobject
31 execuserobject setfont
72 480 moveto (Comparison of Ray Traversal Methods) show
28 execuserobject setfont
289 480 moveto (, by Erik Jansen ) show
90 500 moveto (\() show
/Courier findfont 11 scalefont [1 0 0 -1 0 0] makefont
29
exch
defineuserobject
29 execuserobject setfont
94 500 moveto (fwj@duticg.twi.tudelft.nl) show
28 execuserobject setfont
259 500 moveto (\)) show
72 540 moveto 2 0 32 (In RT-News Vol 5, nr.1, July 1992, we reported a comparison of the DDA-grid traversal as) widthshow
72 560 moveto 1 0 32 (implemented \(standard\) in RayShade) widthshow
253 560 moveto 2 0 32 ( with a recursive bintree \(BSP\) traversal implemented in) widthshow
72 580 moveto (RayShade by Wim de) show
177 580 moveto 1 0 32 ( Leeuw.  Although the BSP-method in all cases performs reasonable well) widthshow
72 600 moveto (\(without additional tweaking\), the grid method wins when some tweaking is allowed \(leaving) show
521 600 moveto 1 0 32 ( the) widthshow
72 620 moveto (groundplane out of the grid, etc.\).) show
72 660 moveto 2 0 32 (I disagree with those authors that take the position that a method should) widthshow
441 660 moveto 3 0 32 ( be fully automatic) widthshow
72 680 moveto (\(without adjusting parameters by hand\).  Of course, in practice it would) show
416 680 moveto 1 0 32 ( be handy to have a fully) widthshow
72 700 moveto (automatic method, but personally I think that we have two different problems:  \(1\) which) show
500 700 moveto 1 0 32 ( method) widthshow
72 720 moveto 1 0 32 (is fastest \(with the best settings possible\) and \(2\) how can we automate the method to find) widthshow
520 720 moveto 2 0 32 ( the) widthshow
grestore
grestore
grestore
grestore
showpage
__NXsheetsavetoken restore
%%PageTrailer
%%DocumentFonts: Times-Bold
%%+ Times-Roman
%%+ Courier
%%+ Helvetica

%%Page: 12 12
%%PageBoundingBox: 0 0 612 792
%%PageFonts: (atend)
%%BeginPageSetup
%%PaperSize: Letter
/__NXsheetsavetoken save def
0 0 translate
gsave
-20 32071 translate
 /__NXbasematrix matrix currentmatrix def
grestore
gsave
0 setgray
/Helvetica findfont 12 scalefont [1 0 0 -1 0 0] makefont
8
exch
defineuserobject
8 execuserobject setfont
1 setlinewidth
[1 0 0 -1 0 32080] concat
0 31288 translate
%%EndPageSetup
gsave
0 0 612 792 rectclip
gsave
gsave
1 setgray 0 0 612 792 rectfill
/Times-Roman findfont 12 scalefont [1 0 0 -1 0 0] makefont
28
exch
defineuserobject
28 execuserobject setfont
0 setgray
72 90 moveto (optimum setting of parameters) show
219 90 moveto 1 0 32 ( algorithmically.  In addition, I think that we should be liberal in) widthshow
72 110 moveto 1 0 32 (allowing having a two-level grid, i.e.  a main grid with in certain partitions or macro-objects) widthshow
530 110 moveto 2 0 32 ( a) widthshow
72 130 moveto (subgrid.  So, in my opinion, a grid method could be hierarchical as well \(and) show
440 130 moveto 1 0 32 ( still differ basically) widthshow
72 150 moveto 1 0 32 (from the adaptive methods as bintree and octree\).  With) widthshow
348 150 moveto 2 0 32 ( these assumptions the grid method is) widthshow
72 170 moveto (\(still\) the winner.) show
72 210 moveto 2 0 32 (We have continued our experiments with the) widthshow
299 210 moveto 3 0 32 ( implementation of a DDA-bintree traversal in) widthshow
72 230 moveto (RayShade.  This was done by another) show
253 230 moveto 1 0 32 ( student, Pim van der Wal.  The method uses the standard) widthshow
72 250 moveto (RayShade DDA-traversal that traverses a \(two-level\) 3D virtual grid that is mapped to the bintree) show
72 270 moveto (subdivision with an \(hierarchical\) spatial index in the style of the EXCELL method of Tamminen) show
72 290 moveto (\(the alternative of a hash table needs less memory but is slower\).  From a first implementation we) show
72 310 moveto 2 0 32 (learned that the timings for the SPD models did not really differ from) widthshow
429 310 moveto 3 0 32 ( those with the BSP-) widthshow
72 330 moveto 1 0 32 (method, so we may conclude that the recursive traversal is indeed an efficient traversal for) widthshow
520 330 moveto 2 0 32 ( the) widthshow
72 350 moveto (bintree, and we did not persue the DDA-bintree approach any further.) show
72 390 moveto 2 0 32 (With respect to) widthshow
149 390 moveto 3 0 32 ( comparing the grid method with the bintree \(or octree\) methods, we were) widthshow
72 410 moveto (interested to know whether) show
202 410 moveto 1 0 32 ( the three methods would behave differently when the density of the) widthshow
72 430 moveto 1 0 32 (model data was increased locally.  Intuitively) widthshow
296 430 moveto 2 0 32 ( we thought that this would benefit the adaptive) widthshow
72 450 moveto 1 0 32 (methods and harm the grid method.  Therefore we made different linear approximations of) widthshow
520 450 moveto 2 0 32 ( the) widthshow
72 470 moveto (teapot model, increasing the amount of polygons from) show
333 470 moveto 1 0 32 ( 10,000 to 60,000.  For the subdivision of) widthshow
72 490 moveto 2 0 32 (the bintree a subdivision criterion of max.  20 polygons per cell) widthshow
399 490 moveto 3 0 32 ( was used.  For the grid a) widthshow
72 510 moveto (resolution of nxnxn was chosen where n = \(#polygons\)^1/3 \(eg.  22x22x22 for 10712 polygons\).) show
/Courier findfont 11 scalefont [1 0 0 -1 0 0] makefont
29
exch
defineuserobject
29 execuserobject setfont
72 549 moveto (polygons   grid    bsp    dda-bintree) show
72 569 moveto (10712     164.7   197.3    229.9) show
72 589 moveto (20592     206.0   216.6    250.7) show
72 609 moveto (30800     207.8   238.1    279.2) show
72 629 moveto (43056     232.8   258.8    322.4) show
72 649 moveto (53592     246.3   270.7    328.8) show
72 669 moveto (61256     267.0   291.9    345.7) show
28 execuserobject setfont
72 710 moveto (If you plot these figures, you see three parallel lines!) show
grestore
grestore
grestore
grestore
showpage
__NXsheetsavetoken restore
%%PageTrailer
%%DocumentFonts: Times-Roman
%%+ Courier
%%+ Helvetica

%%Page: 13 13
%%PageBoundingBox: 0 0 612 792
%%PageFonts: (atend)
%%BeginPageSetup
%%PaperSize: Letter
/__NXsheetsavetoken save def
0 0 translate
gsave
-20 32071 translate
 /__NXbasematrix matrix currentmatrix def
grestore
gsave
0 setgray
/Helvetica findfont 12 scalefont [1 0 0 -1 0 0] makefont
8
exch
defineuserobject
8 execuserobject setfont
1 setlinewidth
[1 0 0 -1 0 32080] concat
0 31288 translate
%%EndPageSetup
gsave
0 0 612 792 rectclip
gsave
gsave
1 setgray 0 0 612 792 rectfill
/Times-Roman findfont 12 scalefont [1 0 0 -1 0 0] makefont
28
exch
defineuserobject
28 execuserobject setfont
0 setgray
72 103 moveto 2 0 32 ([) widthshow
/Times-Italic findfont 12 scalefont [1 0 0 -1 0 0] makefont
30
exch
defineuserobject
30 execuserobject setfont
76 103 moveto 2 0 32 (This is a pretty surprising result, if you think about it - increasing the number of) widthshow
491 103 moveto 3 0 32 ( polygons) widthshow
72 125 moveto (affects all schemes in the same) show
220 125 moveto 1 0 32 ( fashion, on the face of it.  Erik will be making more results and) widthshow
72 147 moveto (ideas available from time to time, since this is work in progress.  -EAH) show
28 execuserobject setfont
413 147 moveto (]) show
72 191 moveto (I wrote Erik in response:) show
72 235 moveto 1 0 32 (One area I wish was explored more formally is characterizing the complexity) widthshow
454 235 moveto 2 0 32 ( of a model with) widthshow
72 257 moveto 2 0 32 (regards to its rendering method.  One interesting scheme Cornell tried a) widthshow
438 257 moveto 3 0 32 ( decade ago \(in the) widthshow
72 279 moveto (Weghorst & Hooper &) show
182 279 moveto 1 0 32 ( Greenberg TOG paper, I think\) was to do things like zoom way out \(so) widthshow
72 301 moveto 1 0 32 (that the model was a speck on the screen\), do a normal rendering, and zoom way in \(so) widthshow
506 301 moveto 2 0 32 ( a tiny) widthshow
72 323 moveto 1 0 32 (portion of one surface was rendered.  A graph of time spent vs.  field) widthshow
417 323 moveto 2 0 32 ( of view angle might be) widthshow
72 345 moveto (interesting in comparing schemes.) show
72 389 moveto 1 0 32 (Varying the size of the background plane polygon and) widthshow
341 389 moveto 2 0 32 ( charting the effect on various schemes) widthshow
72 411 moveto (might also be illuminating.  You and I can guess what the results probably will be.  But you don't) show
72 433 moveto (know until you try, as you point out with your recent experiment.  It) show
399 433 moveto 1 0 32 ( would also be interesting to) widthshow
72 455 moveto (me to try to characterize the models) show
244 455 moveto 1 0 32 ( themselves, e.g.  graph the number of objects per cell for a) widthshow
72 477 moveto 2 0 32 (given set of models and see if there are any) widthshow
298 477 moveto 3 0 32 ( correlations between these graphs and relative) widthshow
72 499 moveto 1 0 32 (performance of schemes \(e.g.  we suspect "when there are a large number) widthshow
437 499 moveto 2 0 32 ( of grid cells with a) widthshow
72 521 moveto (large number of items, the octree scheme performs better than DDA"\).) show
72 565 moveto (Anyway, these are just some experiments that your) show
317 565 moveto 1 0 32 ( research made me think about.  What would) widthshow
72 587 moveto 3 0 32 (be useful is some more knowledge of statistical methods, as I'm not sure how you could) widthshow
72 609 moveto (characterize such graphs into a few variables,) show
290 609 moveto 1 0 32 ( for example, and then see the correlation between) widthshow
72 631 moveto (these variables and) show
163 631 moveto 1 0 32 ( performance times.  Such research could lead to some heuristics that would) widthshow
72 653 moveto (be quite useful:  "when the graph looks like this, use BSP, else use DDA".) show
72 697 moveto (-------------------------------------------------------------------------------) show
grestore
grestore
grestore
grestore
showpage
__NXsheetsavetoken restore
%%PageTrailer
%%DocumentFonts: Times-Roman
%%+ Times-Italic
%%+ Helvetica

%%Page: 14 14
%%PageBoundingBox: 0 0 612 792
%%PageFonts: (atend)
%%BeginPageSetup
%%PaperSize: Letter
/__NXsheetsavetoken save def
0 0 translate
gsave
-20 32071 translate
 /__NXbasematrix matrix currentmatrix def
grestore
gsave
0 setgray
/Helvetica findfont 12 scalefont [1 0 0 -1 0 0] makefont
8
exch
defineuserobject
8 execuserobject setfont
1 setlinewidth
[1 0 0 -1 0 32080] concat
0 31288 translate
%%EndPageSetup
gsave
0 0 612 792 rectclip
gsave
gsave
1 setgray 0 0 612 792 rectfill
/Times-Bold findfont 13 scalefont [1 0 0 -1 0 0] makefont
31
exch
defineuserobject
31 execuserobject setfont
0 setgray
72 90 moveto (Sphere Tessellation//Gamma Correction) show
/Times-Roman findfont 12 scalefont [1 0 0 -1 0 0] makefont
28
exch
defineuserobject
28 execuserobject setfont
296 90 moveto (, by Olin Lathrop) show
90 110 moveto (\() show
/Courier findfont 11 scalefont [1 0 0 -1 0 0] makefont
29
exch
defineuserobject
29 execuserobject setfont
94 110 moveto (olin%cognivis@uunet.uu.net) show
28 execuserobject setfont
266 110 moveto (\)) show
72 150 moveto ([) show
/Times-Italic findfont 12 scalefont [1 0 0 -1 0 0] makefont
30
exch
defineuserobject
30 execuserobject setfont
76 150 moveto (These are comments by Olin on RTNv6n3. ) show
282 150 moveto 1 0 32 ( Olin is the president of Cognivision, a visualization) widthshow
72 170 moveto (company, and has been in rendering for more than a decade. -EAH) show
28 execuserobject setfont
396 170 moveto (]) show
/Times-Bold findfont 12 scalefont [1 0 0 -1 0 0] makefont
32
exch
defineuserobject
32 execuserobject setfont
72 210 moveto (Simple Sphere Tessellation) show
28 execuserobject setfont
72 250 moveto 3 0 32 (The method as described [make three subtriangle from one triangle, by dividing) widthshow
488 250 moveto 4 0 32 ( from the) widthshow
72 270 moveto 2 0 32 (centroid] would end up with long and thin triangles near the edges of the original) widthshow
489 270 moveto 3 0 32 ( triangles.) widthshow
72 290 moveto (Ideally you want a method that is completely symmetrical in recursion.  That doesn't really) show
510 290 moveto 1 0 32 ( exist,) widthshow
72 310 moveto (but you can get much better results) show
240 310 moveto 1 0 32 ( by subdividing each triangle into four triangles by using the) widthshow
72 330 moveto (midpoints of the edges.  I tried this about ten years ago with quite reasonable results.) show
72 370 moveto 2 0 32 (The problem is that the four newly created triangles aren't exactly the same size due) widthshow
504 370 moveto 3 0 32 ( to the) widthshow
72 390 moveto 1 0 32 (sphere's curvature.  The center one is always larger than the) widthshow
370 390 moveto 2 0 32 ( other three.  This effect falls off) widthshow
72 410 moveto 1 0 32 (rapidly as the original triangle gets smaller.  The effect is not that strong,) widthshow
435 410 moveto 2 0 32 ( but is visually quite) widthshow
72 430 moveto 1 0 32 (noticeable if you facet-shade the sphere, especially when starting with a tetrahedron \(the) widthshow
508 430 moveto 2 0 32 ( worst) widthshow
72 450 moveto (case\).  Starting with an octahedron as Mike Castle suggested is already noticeably better.) show
72 490 moveto (You can apply the same) show
187 490 moveto 1 0 32 ( technique to subdividing a quadrilateral into four smaller ones.  In this) widthshow
72 510 moveto (case, start with a cube.) show
32 execuserobject setfont
72 550 moveto (Gamma Correction) show
28 execuserobject setfont
72 590 moveto (Gamma correction is largely a crock because the fundamental assumption is wrong.  Yes, there) show
528 590 moveto 1 0 32 ( is) widthshow
72 610 moveto 3 0 32 (a \(reasonably\) reliable relationship between voltage and phosphor emission power) widthshow
494 610 moveto 4 0 32 ( that the) widthshow
72 630 moveto (standard "gamma" formula models well enough for our purposes.  Unfortunately, this is not at) show
524 630 moveto 1 0 32 ( all) widthshow
72 650 moveto (what the relationship) show
173 650 moveto 1 0 32 ( from pixel intensity value to visible brightness actually looks like.  Major) widthshow
72 670 moveto 1 0 32 (reasons why not include) widthshow
191 670 moveto 2 0 32 ( the monitor offset \(black level\) control, and the CRT's reflection of) widthshow
72 690 moveto (ambient light.  The amplifiers can also be quite) show
72 710 moveto (non-linear at low voltage levels.) show
grestore
grestore
grestore
grestore
showpage
__NXsheetsavetoken restore
%%PageTrailer
%%DocumentFonts: Times-Bold
%%+ Times-Roman
%%+ Times-Italic
%%+ Courier
%%+ Helvetica

%%Page: 15 15
%%PageBoundingBox: 0 0 612 792
%%PageFonts: (atend)
%%BeginPageSetup
%%PaperSize: Letter
/__NXsheetsavetoken save def
0 0 translate
gsave
-20 32071 translate
 /__NXbasematrix matrix currentmatrix def
grestore
gsave
0 setgray
/Helvetica findfont 12 scalefont [1 0 0 -1 0 0] makefont
8
exch
defineuserobject
8 execuserobject setfont
1 setlinewidth
[1 0 0 -1 0 32080] concat
0 31288 translate
%%EndPageSetup
gsave
0 0 612 792 rectclip
gsave
gsave
1 setgray 0 0 612 792 rectfill
/Times-Roman findfont 12 scalefont [1 0 0 -1 0 0] makefont
28
exch
defineuserobject
28 execuserobject setfont
0 setgray
72 110 moveto 1 0 32 (All this amounts to black not really) widthshow
247 110 moveto 2 0 32 ( being black, which throws a big wrench into the gamma) widthshow
72 130 moveto (formula.  Here is how I think of and deal with the problem:) show
72 170 moveto (The problem really comes down to mapping) show
285 170 moveto 1 0 32 ( an image with a large dynamic range \(256:1\) to an) widthshow
72 190 moveto 1 0 32 (output medium with considerably less.  Ektachrome slides can get to 150:1,) widthshow
446 190 moveto 2 0 32 ( glossy prints with) widthshow
72 210 moveto (careful illumination 80:1, matte prints maybe 40:1, newspapers 15:1.  A well adjusted) show
484 210 moveto 1 0 32 ( monitor in) widthshow
72 230 moveto 1 0 32 (a dark room maybe 100:1 if everything is perfect.  Figure 40:1 \(if that much\) for more) widthshow
501 230 moveto 2 0 32 ( normal) widthshow
72 250 moveto (monitor situations.  Contrast this to real world scenes in a office, which can easily reach 500:1.) show
72 290 moveto 1 0 32 (Clearly, something needs to get squashed in the) widthshow
308 290 moveto 2 0 32 ( process displaying or making a hard copy of) widthshow
72 310 moveto 1 0 32 (most images.  The quest is to squash while maintaining the highest perceived "likeness" to) widthshow
520 310 moveto 2 0 32 ( the) widthshow
72 330 moveto 2 0 32 (true image.  Humans perceive intensities logarithmically, not linearly.  Since we want to) widthshow
522 330 moveto 3 0 32 ( do) widthshow
72 350 moveto 4 0 32 (image manipulations in perceptual linear space, this) widthshow
345 350 moveto 5 0 32 ( means manipulating brightnesses in) widthshow
72 370 moveto (mathematical log space.  Humans) show
234 370 moveto 1 0 32 ( also tend to "tune out" details in dark areas of a scene. There) widthshow
72 390 moveto (was a lot of interesting research on this stuff done by Kodak back in the 1930s.) show
72 430 moveto 4 0 32 (Between the black level problem, the way our perception system works, and a) widthshow
495 430 moveto 5 0 32 ( host of) widthshow
72 450 moveto 1 0 32 (unpredictable environmental variables, it seems pointless to try to come up with a formula that) widthshow
72 470 moveto (can then be "corrected" for.  Even if you could come close, my points are:) show
72 510 moveto 2 0 32 (  1\)   Such a formula couldn't be reasonably) widthshow
303 510 moveto 3 0 32 ( approximated by anything as simple as one ) widthshow
90 530 moveto ("gamma" exponential.) show
72 570 moveto (  2\) ) show
91 570 moveto 1 0 32 (  Even if the function was known, you don't want to "correct" for the best linear mapping ) widthshow
90 590 moveto (anyway.  You want the best logarithmic mapping.) show
72 630 moveto 1 0 32 (So, here's what I do.  My software can map the input black to white range to any other) widthshow
506 630 moveto 2 0 32 ( range,) widthshow
72 650 moveto (and can independently apply a "brightness" factor.  The brightness factor is exponential in nature,) show
72 670 moveto (but doesn't effect full black or full white.  A value of) show
327 670 moveto 1 0 32 ( 0 leaves everything alone.  Positive values) widthshow
72 690 moveto 2 0 32 (increasingly slosh intensities smoothly to the white end, while negative values slosh towards) widthshow
72 710 moveto 2 0 32 (black.  This doesn't try to model what the hardware is actually) widthshow
394 710 moveto 3 0 32 ( doing, but provides enough) widthshow
grestore
grestore
grestore
grestore
showpage
__NXsheetsavetoken restore
%%PageTrailer
%%DocumentFonts: Times-Roman
%%+ Helvetica

%%Page: 16 16
%%PageBoundingBox: 0 0 612 792
%%PageFonts: (atend)
%%BeginPageSetup
%%PaperSize: Letter
/__NXsheetsavetoken save def
0 0 translate
gsave
-20 32071 translate
 /__NXbasematrix matrix currentmatrix def
grestore
gsave
0 setgray
/Helvetica findfont 12 scalefont [1 0 0 -1 0 0] makefont
8
exch
defineuserobject
8 execuserobject setfont
1 setlinewidth
[1 0 0 -1 0 32080] concat
0 31288 translate
%%EndPageSetup
gsave
0 0 612 792 rectclip
gsave
gsave
1 setgray 0 0 612 792 rectfill
/Times-Roman findfont 12 scalefont [1 0 0 -1 0 0] makefont
28
exch
defineuserobject
28 execuserobject setfont
0 setgray
72 80 moveto (controls to make things look good.) show
72 120 moveto (I have used this technique to pre-treat images for film recorders, printers, and) show
443 120 moveto 1 0 32 ( other output media) widthshow
72 140 moveto (with great results.) show
72 180 moveto (-------------------------------------------------------------------------------) show
/Times-Bold findfont 13 scalefont [1 0 0 -1 0 0] makefont
31
exch
defineuserobject
31 execuserobject setfont
72 220 moveto (Computational Geometry On-Line Bibliography) show
28 execuserobject setfont
341 220 moveto (, by Bill Jones) show
90 240 moveto (\() show
/Courier findfont 11 scalefont [1 0 0 -1 0 0] makefont
29
exch
defineuserobject
29 execuserobject setfont
94 240 moveto (jones@skdad.usask.ca) show
28 execuserobject setfont
226 240 moveto (\)) show
72 280 moveto 1 0 32 (The computational geometry) widthshow
213 280 moveto 2 0 32 ( community maintains its own bibliography of publications in or) widthshow
72 300 moveto 1 0 32 (closely related to that subject.  Every four months, additions and corrections are solicited) widthshow
512 300 moveto 2 0 32 ( from) widthshow
72 320 moveto 3 0 32 (users, after which the database is updated and released anew.  As) widthshow
417 320 moveto 4 0 32 ( of September 1993, it) widthshow
72 340 moveto (contained 5356 bibtex entries.  It can be retrieved via) show
327 340 moveto 1 0 32 ( anonymous ftp from ) widthshow
29 execuserobject setfont
435 340 moveto 1 0 32 (cs.usask.ca) widthshow
28 execuserobject setfont
508 340 moveto 1 0 32 ( in the) widthshow
72 360 moveto 1 0 32 (directory ) widthshow
29 execuserobject setfont
119 360 moveto 1 0 32 (pub/geometry) widthshow
28 execuserobject setfont
198 360 moveto 1 0 32 (.  The file ) widthshow
29 execuserobject setfont
252 360 moveto 1 0 32 (geombib.tar.Z) widthshow
28 execuserobject setfont
338 360 moveto 1 0 32 ( therein is the bibliography proper, along) widthshow
72 380 moveto 3 0 32 (with supporting software and documentation; ) widthshow
29 execuserobject setfont
308 380 moveto 3 0 32 (geom.ps.Z) widthshow
28 execuserobject setfont
367 380 moveto 3 0 32 ( is a Postscript formatting of) widthshow
519 380 moveto 4 0 32 ( the) widthshow
72 400 moveto 2 0 32 (database; and ) widthshow
29 execuserobject setfont
144 400 moveto 2 0 32 (o-cgc19.ps.Z) widthshow
28 execuserobject setfont
223 400 moveto 2 0 32 ( is an overview which was published during 1993 in SIGACT) widthshow
72 420 moveto 3 0 32 (News and the International J. Comput. Geom. Appl.  The file ) widthshow
29 execuserobject setfont
402 420 moveto 3 0 32 (ftp-hints) widthshow
28 execuserobject setfont
461 420 moveto 3 0 32 ( provides) widthshow
509 420 moveto 4 0 32 ( more) widthshow
72 440 moveto (detailed retrieval information.) show
72 480 moveto (-------------------------------------------------------------------------------) show
31 execuserobject setfont
72 520 moveto (Summary of Advanced Rendering Papers from Eurographics '93) show
28 execuserobject setfont
433 520 moveto (, by Erik ) show
489 520 moveto (Jansen) show
72 540 moveto (\() show
29 execuserobject setfont
76 540 moveto (fwj@duticg.twi.tudelft.nl) show
28 execuserobject setfont
241 540 moveto (\)) show
72 580 moveto ([) show
/Times-Italic findfont 12 scalefont [1 0 0 -1 0 0] makefont
30
exch
defineuserobject
30 execuserobject setfont
76 580 moveto (The exact references can be found at ) show
/Courier-Oblique findfont 11 scalefont [1 0 0 -1 0 0] makefont
34
exch
defineuserobject
34 execuserobject setfont
256 580 moveto (princeton.edu) show
30 execuserobject setfont
341 580 moveto ( in ) show
34 execuserobject setfont
357 580 moveto (/pub/Graphics/papers) show
72 599 moveto (RTBib) show
30 execuserobject setfont
105 599 moveto ( and ) show
34 execuserobject setfont
129 599 moveto (RadBib) show
30 execuserobject setfont
169 599 moveto ( - EAH) show
28 execuserobject setfont
202 599 moveto (]) show
/Times-Bold findfont 12 scalefont [1 0 0 -1 0 0] makefont
32
exch
defineuserobject
32 execuserobject setfont
72 640 moveto 1 0 32 (Takamura, et al.) widthshow
28 execuserobject setfont
159 640 moveto 1 0 32 (:  a skylight illumination model based on scattering due to air molecules) widthshow
517 640 moveto 2 0 32 ( and) widthshow
72 660 moveto 1 0 32 (aerosols.  Comparison of two methods to calculate the sky illuminance received by a) widthshow
492 660 moveto 2 0 32 ( point:  a) widthshow
72 680 moveto (band source method and a parallelepiped \(a sort of hemi-cube\) method.) show
32 execuserobject setfont
72 719 moveto (Blasi, et al.) show
28 execuserobject setfont
128 719 moveto (:  light absorption and scattering described by a phase) show
386 719 moveto 1 0 32 ( function; a new approximation) widthshow
grestore
grestore
grestore
grestore
showpage
__NXsheetsavetoken restore
%%PageTrailer
%%DocumentFonts: Courier-Oblique
%%+ Times-Bold
%%+ Times-Roman
%%+ Times-Italic
%%+ Courier
%%+ Helvetica

%%Page: 17 17
%%PageBoundingBox: 0 0 612 792
%%PageFonts: (atend)
%%BeginPageSetup
%%PaperSize: Letter
/__NXsheetsavetoken save def
0 0 translate
gsave
-20 32071 translate
 /__NXbasematrix matrix currentmatrix def
grestore
gsave
0 setgray
/Helvetica findfont 12 scalefont [1 0 0 -1 0 0] makefont
8
exch
defineuserobject
8 execuserobject setfont
1 setlinewidth
[1 0 0 -1 0 32080] concat
0 31288 translate
%%EndPageSetup
gsave
0 0 612 792 rectclip
gsave
gsave
1 setgray 0 0 612 792 rectfill
/Times-Roman findfont 12 scalefont [1 0 0 -1 0 0] makefont
28
exch
defineuserobject
28 execuserobject setfont
0 setgray
72 85 moveto (formula is given that is faster to compute and approximates) show
357 85 moveto 1 0 32 ( closely the theoretical functions; use) widthshow
72 104 moveto (of the scattering function for simulating volume density objects \(haze,) show
409 104 moveto 1 0 32 ( fog, clouds\) in a two-pass) widthshow
72 123 moveto (Monte Carlo ray tracing.  \(this paper received the best paper award\).) show
/Times-Bold findfont 12 scalefont [1 0 0 -1 0 0] makefont
32
exch
defineuserobject
32 execuserobject setfont
72 161 moveto (Daldegan, et al.) show
28 execuserobject setfont
151 161 moveto (:  physical simulation of hair on basis of a dynamic model of hair) show
464 161 moveto 1 0 32 ( and a collision) widthshow
72 180 moveto 1 0 32 (detection technique) widthshow
167 180 moveto 2 0 32 ( comparable to the work of Anjyo et al. Visualization with ray tracing in) widthshow
72 199 moveto (combination with shadow buffers.) show
32 execuserobject setfont
72 237 moveto 1 0 32 (Shirman, et) widthshow
133 237 moveto 2 0 32 ( al.) widthshow
28 execuserobject setfont
150 237 moveto 2 0 32 (:  techniques to be used in combination with dynamic \(viewpoint dependent\)) widthshow
72 256 moveto 1 0 32 (tessellation of curved surfaces:  front- or backfacing test, light) widthshow
379 256 moveto 2 0 32 ( influence test, and existence of) widthshow
72 275 moveto (silhouette test.  No direct link with ray tracing or global illumination.) show
32 execuserobject setfont
72 313 moveto (Drettakis, et al.) show
28 execuserobject setfont
151 313 moveto (:  characteristics of illumination functions) show
351 313 moveto 1 0 32 ( \(maxima, minima, critical points, etc\)) widthshow
72 332 moveto (and application to sampling and interpolation.) show
32 execuserobject setfont
72 370 moveto 1 0 32 (Maurel, et al.) widthshow
28 execuserobject setfont
143 370 moveto 1 0 32 (:  exploiting) widthshow
203 370 moveto 2 0 32 ( coherence in ray tracing animation sequences by keeping track of) widthshow
72 389 moveto (temporal invariances.) show
32 execuserobject setfont
72 427 moveto 1 0 32 (Nishita, et al.) widthshow
28 execuserobject setfont
141 427 moveto 1 0 32 (:  form factor calculation for) widthshow
283 427 moveto 2 0 32 ( curved surface patches by surface subdivision and) widthshow
72 446 moveto (element projection; shadow computation using Bezier clipping.) show
32 execuserobject setfont
72 484 moveto 1 0 32 (Bao, et al.) widthshow
28 execuserobject setfont
125 484 moveto 1 0 32 (:  form factor calculation for) widthshow
266 484 moveto 2 0 32 ( curved surface patches by approximating the surfaces) widthshow
72 503 moveto (with triangular elements.) show
32 execuserobject setfont
72 541 moveto 1 0 32 (Sbert) widthshow
28 execuserobject setfont
100 541 moveto 1 0 32 (:  Global form factor calculation by sending a large number of rays in) widthshow
447 541 moveto 2 0 32 ( random directions) widthshow
72 560 moveto (through a scene.  Discussion of estimators and error metrics.) show
32 execuserobject setfont
72 598 moveto (Michelin, et al.) show
28 execuserobject setfont
148 598 moveto (:  new form-factor calculation based on reducing) show
382 598 moveto 1 0 32 ( the double integral to a simpler) widthshow
72 617 moveto (line integral; parallel implementations of the method.) show
32 execuserobject setfont
72 655 moveto (Cohen, et al.) show
28 execuserobject setfont
136 655 moveto (:  a \(top-down/recursive\) ray traversal method for a pyramid data structure using) show
522 655 moveto 1 0 32 ( the) widthshow
72 674 moveto (midpoint line generation algorithm.  Application to terrain data visualization.) show
72 714 moveto (-------------------------------------------------------------------------------) show
grestore
grestore
grestore
grestore
showpage
__NXsheetsavetoken restore
%%PageTrailer
%%DocumentFonts: Times-Bold
%%+ Times-Roman
%%+ Helvetica

%%Page: 18 18
%%PageBoundingBox: 0 0 612 792
%%PageFonts: (atend)
%%BeginPageSetup
%%PaperSize: Letter
/__NXsheetsavetoken save def
0 0 translate
gsave
-20 32071 translate
 /__NXbasematrix matrix currentmatrix def
grestore
gsave
0 setgray
/Helvetica findfont 12 scalefont [1 0 0 -1 0 0] makefont
8
exch
defineuserobject
8 execuserobject setfont
1 setlinewidth
[1 0 0 -1 0 32080] concat
0 31288 translate
%%EndPageSetup
gsave
0 0 612 792 rectclip
gsave
gsave
1 setgray 0 0 612 792 rectfill
/Times-BoldItalic findfont 12 scalefont [1 0 0 -1 0 0] makefont
37
exch
defineuserobject
37 execuserobject setfont
0 setgray
72 107 moveto (RAT) show
/Times-Bold findfont 12 scalefont [1 0 0 -1 0 0] makefont
32
exch
defineuserobject
32 execuserobject setfont
95 107 moveto (, Another Ray Tracer) show
/Times-Roman findfont 12 scalefont [1 0 0 -1 0 0] makefont
28
exch
defineuserobject
28 execuserobject setfont
206 107 moveto (, by Tom Wilson \() show
/Courier findfont 11 scalefont [1 0 0 -1 0 0] makefont
29
exch
defineuserobject
29 execuserobject setfont
294 107 moveto (twilson@sunny5.dab.ge.com) show
28 execuserobject setfont
459 107 moveto (\)) show
72 147 moveto (My goal [in making my ray tracer] is very different from the others.) show
/Times-Italic findfont 12 scalefont [1 0 0 -1 0 0] makefont
30
exch
defineuserobject
30 execuserobject setfont
72 187 moveto 1 0 32 (RAT) widthshow
28 execuserobject setfont
93 187 moveto 1 0 32 ( - a ray tracing package to benchmark acceleration schemes.  Although it) widthshow
455 187 moveto 2 0 32 ( is less primitive) widthshow
72 207 moveto (than its existence as my Ph.D. research work,) show
290 207 moveto 1 0 32 ( it is still primitive compared to existing packages.) widthshow
72 227 moveto 2 0 32 (It only) widthshow
106 227 moveto 3 0 32 ( does very basic effects \(no fuzzy shadows, textures, etc.\).  It does contain several) widthshow
72 247 moveto (accelerators though: uniform subdivision, \(a bad\) HTE, BSP tree and octree with index grids, and) show
72 267 moveto (extent tracing \(my research\).) show
210 267 moveto 1 0 32 (  The idea of the package is to be able to plug in accelerators very) widthshow
72 287 moveto (easily.  Someone) show
154 287 moveto 1 0 32 ( was actually able to do this.  So the accelerator, recursive bintree traversal, is) widthshow
72 307 moveto (also available.  Bounding volumes are also selectable for further testing.) show
72 347 moveto (Features:) show
72 387 moveto (IBM PC version?) show
204 387 moveto (*) show
72 407 moveto (Amiga version?) show
204 407 moveto (*) show
72 427 moveto (Mac version?) show
204 427 moveto (*+) show
/Times-Roman findfont 10 scalefont [1 0 0 -1 0 0] makefont
38
exch
defineuserobject
38 execuserobject setfont
108 444 moveto (*=source code can be compiled for it. Images aren't displayed though \(need) show
108 459 moveto (      to write something or convert the image\)) show
108 474 moveto (+=I have a Mac and given time, there will be a Mac version) show
28 execuserobject setfont
72 512 moveto (Sphere/Cylinder/Cone) show
204 512 moveto (Y) show
72 532 moveto (Paraboloid ) show
204 532 moveto (Y \(I've never tested it, because it's not in SPD\)) show
72 552 moveto (Efficiency scheme?) show
204 552 moveto (US, HTE, BSP, Octree, extent tracing, rec. bintree) show
72 592 moveto (Advanced local shading - no, but it does the polygon patch shading, SPD teapot) show
72 632 moveto (User support ) show
204 632 moveto (e-mail) show
72 652 moveto (Other S/W support) show
204 652 moveto (some) show
72 692 moveto 1 0 32 (As you can see, it doesn't measure up to the others.  But it's a research platform, not a) widthshow
503 692 moveto 2 0 32 ( pretty-) widthshow
72 712 moveto 2 0 32 (picture generator.  The accelerators should be) widthshow
303 712 moveto 3 0 32 ( easy to plug into existing tracers if they are) widthshow
grestore
grestore
grestore
grestore
showpage
__NXsheetsavetoken restore
%%PageTrailer
%%DocumentFonts: Times-Bold
%%+ Times-Roman
%%+ Times-Italic
%%+ Courier
%%+ Times-BoldItalic
%%+ Helvetica

%%Page: 19 19
%%PageBoundingBox: 0 0 612 792
%%PageFonts: (atend)
%%BeginPageSetup
%%PaperSize: Letter
/__NXsheetsavetoken save def
0 0 translate
gsave
-20 32071 translate
 /__NXbasematrix matrix currentmatrix def
grestore
gsave
0 setgray
/Helvetica findfont 12 scalefont [1 0 0 -1 0 0] makefont
8
exch
defineuserobject
8 execuserobject setfont
1 setlinewidth
[1 0 0 -1 0 32080] concat
0 31288 translate
%%EndPageSetup
gsave
0 0 612 792 rectclip
gsave
gsave
1 setgray 0 0 612 792 rectfill
/Times-Roman findfont 12 scalefont [1 0 0 -1 0 0] makefont
28
exch
defineuserobject
28 execuserobject setfont
0 setgray
72 90 moveto (modularly written.  I'm currently working) show
274 90 moveto 1 0 32 ( on an extension to my own extent tracing accelerator) widthshow
72 110 moveto (and struggling with the conversion of Arvo & Kirk's 5D ray classification method.  I also will try) show
72 130 moveto (to see if Ohta's tracer can be converted \(if I can find it on the net again\).) show
72 170 moveto (New object types are easily added to the code.  I'd like to add new bounding) show
439 170 moveto 1 0 32 ( volumes, but that is) widthshow
72 190 moveto (way down the list of things to do.  Also, NFF is the input format.  A very simple) show
458 190 moveto 1 0 32 ( output format is) widthshow
72 210 moveto (used and a couple of conversion routines are provided \(to .ppm and .ras\).) show
72 250 moveto (I am very elated that Wim) show
198 250 moveto 1 0 32 ( de Leeuw was able to add recursive bintree traversal to the package.) widthshow
72 270 moveto (He said it was pretty easy.  I'm looking for other researchers to either take a) show
436 270 moveto 1 0 32 ( stab at it or give me) widthshow
72 290 moveto (the code so I can try.  It is far harder for me to take someone else's code that is possibly not) show
511 290 moveto 1 0 32 ( well-) widthshow
72 310 moveto 2 0 32 (structured and convert it to my package than it is) widthshow
324 310 moveto 3 0 32 ( for him to convert it to my documented) widthshow
72 330 moveto 1 0 32 (package.  It still takes a little time, but instructions are given \(they are improving too\), and the) widthshow
72 350 moveto 1 0 32 (simplest of all examples, brute force tracing, is available as a guide.) widthshow
408 350 moveto 2 0 32 (  Basically, 6 routines are) widthshow
72 370 moveto (necessary:  \(1\) scan the command line parameters for the technique and init. ) show
440 370 moveto 1 0 32 ( a few variables, \(2\)) widthshow
72 390 moveto 1 0 32 (select the BVs) widthshow
143 390 moveto 2 0 32 ( to be used for objects \(which usually just uses the defaults, but the choice is) widthshow
72 410 moveto (there\), \(3\) build the technique's data structure \(something the person) show
401 410 moveto 1 0 32 ( already has done\), \(4\) trace) widthshow
72 430 moveto (one ray through the structure \(also already done\), \(5\)) show
326 430 moveto 1 0 32 ( trace one shadow ray through the structure) widthshow
72 450 moveto (\(often this is the same as #4\), \(6\) print diagnostics) show
312 450 moveto 1 0 32 ( for the technique.  All other code is provided) widthshow
72 470 moveto (\(shading, intersection, etc.\).) show
72 510 moveto ([) show
/Times-Italic findfont 12 scalefont [1 0 0 -1 0 0] makefont
30
exch
defineuserobject
30 execuserobject setfont
76 510 moveto (Contact Tom Wilson if you are interested in this research tool) show
28 execuserobject setfont
373 510 moveto (]) show
72 550 moveto (-------------------------------------------------------------------------------) show
/Times-Bold findfont 13 scalefont [1 0 0 -1 0 0] makefont
31
exch
defineuserobject
31 execuserobject setfont
72 590 moveto (Fast Raytracing via ) show
/Times-BoldItalic findfont 13 scalefont [1 0 0 -1 0 0] makefont
33
exch
defineuserobject
33 execuserobject setfont
184 590 moveto (SEADS) show
28 execuserobject setfont
225 590 moveto (, by John Chapman \() show
/Courier findfont 11 scalefont [1 0 0 -1 0 0] makefont
29
exch
defineuserobject
29 execuserobject setfont
325 590 moveto (chapman@cs.sfu.ca) show
28 execuserobject setfont
437 590 moveto (\) and) show
90 610 moveto (Wilfrid Lefer \() show
29 execuserobject setfont
161 610 moveto (lefer@lifl.lifl.fr) show
28 execuserobject setfont
280 610 moveto (\)) show
72 650 moveto (Greg Stull \() show
29 execuserobject setfont
129 650 moveto (gregs@irvine.com) show
28 execuserobject setfont
234 650 moveto (\) writes:) show
72 690 moveto (>IEEE Computer Graphics magazine contained an article back in) show
386 690 moveto 1 0 32 ( the late 1980's [) widthshow
30 execuserobject setfont
471 690 moveto 1 0 32 (actually 1986,) widthshow
72 710 moveto 2 0 32 (>v. 6, n. 4 -EAH) widthshow
28 execuserobject setfont
160 710 moveto 2 0 32 (] which presented an approach) widthshow
314 710 moveto 3 0 32 ( to raytracing using a Spatially Enumerated) widthshow
grestore
grestore
grestore
grestore
showpage
__NXsheetsavetoken restore
%%PageTrailer
%%DocumentFonts: Times-Bold
%%+ Times-Roman
%%+ Times-Italic
%%+ Courier
%%+ Times-BoldItalic
%%+ Helvetica

%%Page: 20 20
%%PageBoundingBox: 0 0 612 792
%%PageFonts: (atend)
%%BeginPageSetup
%%PaperSize: Letter
/__NXsheetsavetoken save def
0 0 translate
gsave
-20 32071 translate
 /__NXbasematrix matrix currentmatrix def
grestore
gsave
0 setgray
/Helvetica findfont 12 scalefont [1 0 0 -1 0 0] makefont
8
exch
defineuserobject
8 execuserobject setfont
1 setlinewidth
[1 0 0 -1 0 32080] concat
0 31288 translate
%%EndPageSetup
gsave
0 0 612 792 rectclip
gsave
gsave
1 setgray 0 0 612 792 rectfill
/Times-Roman findfont 12 scalefont [1 0 0 -1 0 0] makefont
28
exch
defineuserobject
28 execuserobject setfont
0 setgray
72 80 moveto (>Auxilliary Data Structure \() show
/Times-Italic findfont 12 scalefont [1 0 0 -1 0 0] makefont
30
exch
defineuserobject
30 execuserobject setfont
208 80 moveto (SEADS) show
28 execuserobject setfont
243 80 moveto (\).  Other than requiring a large amount of memory, this seems) show
72 100 moveto (>to be a very promising approach since the rendering time) show
352 100 moveto 1 0 32 ( of an image is "essentially" unrelated) widthshow
72 120 moveto (>to the scene complexity.) show
72 140 moveto (>) show
72 160 moveto (>I am curious if anyone out there has any experience with this rendering method.) show
72 200 moveto (John Chapman replies:) show
72 240 moveto (That was Fujimoto's technique and yes it takes a) show
306 240 moveto 1 0 32 ( lot of memory. An obvious extension is to use) widthshow
72 260 moveto (hierarchies of such uniform spatial subdivision structures so that 'empty' areas are not) show
486 260 moveto 1 0 32 ( filled with) widthshow
72 280 moveto (huge numbers of tiny little cubes - Wyvill did) show
291 280 moveto 1 0 32 ( some work on this with one of his students a few) widthshow
72 300 moveto (years ago but I can't remember exactly where it was published at) show
384 300 moveto 1 0 32 ( the moment - try taking a look) widthshow
72 320 moveto (at Graphics Interface proceedings from around 90 or 91. Hope) show
72 340 moveto (this helps.) show
72 380 moveto ([) show
30 execuserobject setfont
76 380 moveto (The paper he means is in GI '89, by David Jevans and Brian Wyvill, "Adaptive) show
72 400 moveto (Voxel Subdivision for Ray Tracing" - it's a paper that should get more notice,) show
72 420 moveto (as the technique seems quite reasonable \(nesting grids, essentially\). -EAH) show
28 execuserobject setfont
428 420 moveto (]) show
72 460 moveto (Wilfrid Lefer replies:) show
72 500 moveto (I wrote) show
106 500 moveto 1 0 32 ( a ray-tracing using the ) widthshow
30 execuserobject setfont
225 500 moveto 1 0 32 (SEADS) widthshow
28 execuserobject setfont
260 500 moveto 1 0 32 ( structure two years ago.  Implementing this acceleration) widthshow
72 520 moveto (technique didn't raise any problem.  You can find the C code of my software on the following) show
523 520 moveto 1 0 32 ( ftp) widthshow
72 540 moveto (site:) show
/Courier findfont 11 scalefont [1 0 0 -1 0 0] makefont
29
exch
defineuserobject
29 execuserobject setfont
90 580 moveto (ftp.lifl.fr) show
28 execuserobject setfont
163 580 moveto ( \(dir. ) show
29 execuserobject setfont
189 580 moveto (/pub/users/graphix/lefer/SEADS) show
28 execuserobject setfont
387 580 moveto (\)) show
72 620 moveto (-------------------------------------------------------------------------------) show
/Times-Bold findfont 13 scalefont [1 0 0 -1 0 0] makefont
31
exch
defineuserobject
31 execuserobject setfont
72 660 moveto (Parallel Ray Tracing Schemes) show
28 execuserobject setfont
239 660 moveto (, by Rainer Menes) show
90 680 moveto (\() show
29 execuserobject setfont
94 680 moveto (menes@statistik.tu-muenchen.de) show
28 execuserobject setfont
292 680 moveto (\)) show
72 720 moveto ([) show
30 execuserobject setfont
76 720 moveto (This is a introduction to some of the basic problems of parallelizing a ray tracer - EAH) show
28 execuserobject setfont
495 720 moveto (]) show
grestore
grestore
grestore
grestore
showpage
__NXsheetsavetoken restore
%%PageTrailer
%%DocumentFonts: Times-Bold
%%+ Times-Roman
%%+ Times-Italic
%%+ Courier
%%+ Helvetica

%%Page: 21 21
%%PageBoundingBox: 0 0 612 792
%%PageFonts: (atend)
%%BeginPageSetup
%%PaperSize: Letter
/__NXsheetsavetoken save def
0 0 translate
gsave
-20 32071 translate
 /__NXbasematrix matrix currentmatrix def
grestore
gsave
0 setgray
/Helvetica findfont 12 scalefont [1 0 0 -1 0 0] makefont
8
exch
defineuserobject
8 execuserobject setfont
1 setlinewidth
[1 0 0 -1 0 32080] concat
0 31288 translate
%%EndPageSetup
gsave
0 0 612 792 rectclip
gsave
gsave
1 setgray 0 0 612 792 rectfill
/Times-Roman findfont 12 scalefont [1 0 0 -1 0 0] makefont
28
exch
defineuserobject
28 execuserobject setfont
0 setgray
72 110 moveto (Dennis Gorrie writes:) show
72 130 moveto (>I'm trying to come up) show
184 130 moveto 1 0 32 ( for a project that shows off distributed processing, and my first interest) widthshow
72 150 moveto (>was ray-tracing.  I don't have much background in writing rendering code, so I am not sure how) show
72 170 moveto (>it would be done in a distributed environment:) show
72 190 moveto (>) show
72 210 moveto (>1\) render a picture 1 scanline at a time, where each machine in the pool does a scanline.) show
72 230 moveto (>) show
72 250 moveto 1 0 32 (>2\) break the picture up into n portions for n machines, and have each one work on) widthshow
488 250 moveto 2 0 32 ( their own) widthshow
72 270 moveto (>portion.) show
72 290 moveto (>) show
72 310 moveto 2 0 32 (>Well, I'm really not sure what the best way to do this is.  For #1, this would ensure) widthshow
512 310 moveto 3 0 32 ( each) widthshow
72 330 moveto (>machine does equal amounts of work, however, perhaps this method would be very good) show
506 330 moveto 1 0 32 ( to use) widthshow
72 350 moveto (>with an incremental integer algorithm for rendering.) show
72 390 moveto (Hmmm, this is not a good method to do it.  You also) show
325 390 moveto 1 0 32 ( will have to deal with the problem that the) widthshow
72 410 moveto (workload is not equally distributed over the scanlines. ) show
334 410 moveto 1 0 32 ( An idea which is not bad is to interleave) widthshow
72 430 moveto 2 0 32 (the scanlines on each processor like this \(1) widthshow
291 430 moveto 3 0 32 ( Processor gets scanline 0, n, 2*n, ...  the next) widthshow
72 450 moveto (processor get 2 get 1, n + 1, 2*n + 1, ....  and so on\).  This gives you a static) show
435 450 moveto 1 0 32 ( way to distribute the) widthshow
72 470 moveto (work over several processors.  This method has two problems.) show
72 510 moveto (1.\)  It will only work for a small number of workers.  Otherwise the scanlines on the ) show
489 510 moveto (processor) show
72 530 moveto (are so far from each other that they are not related and don't have) show
386 530 moveto 1 0 32 ( the same amount of work, and) widthshow
72 550 moveto (a 640x480 picture can only be split into 480 working packages.) show
72 590 moveto (2.\)  Antialiasing is hard to use.  Normally antialising uses the information of the lines ) show
489 590 moveto (calculated) show
72 610 moveto (before on a single processor machine.  On a network of processors you ) show
432 610 moveto 18 0 32 (don't have that) widthshow
72 630 moveto (information \(or you will need a lot of communication\).  To do ) show
375 630 moveto (antialiasing for the worst case) show
518 630 moveto 1 0 32 ( you) widthshow
72 650 moveto (have to calculate the scanline before you and the ) show
318 650 moveto 10 0 32 (scanline which follows you on each) widthshow
72 670 moveto (processor.  This will raise your work amount by 3 ) show
318 670 moveto (times!) show
grestore
grestore
grestore
grestore
showpage
__NXsheetsavetoken restore
%%PageTrailer
%%DocumentFonts: Times-Roman
%%+ Helvetica

%%Page: 22 22
%%PageBoundingBox: 0 0 612 792
%%PageFonts: (atend)
%%BeginPageSetup
%%PaperSize: Letter
/__NXsheetsavetoken save def
0 0 translate
gsave
-20 32071 translate
 /__NXbasematrix matrix currentmatrix def
grestore
gsave
0 setgray
/Helvetica findfont 12 scalefont [1 0 0 -1 0 0] makefont
8
exch
defineuserobject
8 execuserobject setfont
1 setlinewidth
[1 0 0 -1 0 32080] concat
0 31288 translate
%%EndPageSetup
gsave
0 0 612 792 rectclip
gsave
gsave
1 setgray 0 0 612 792 rectfill
/Times-Roman findfont 12 scalefont [1 0 0 -1 0 0] makefont
28
exch
defineuserobject
28 execuserobject setfont
0 setgray
72 90 moveto 1 0 32 (>Method #2 might get around this problem, and reduce network traffic;) widthshow
426 90 moveto 2 0 32 ( however, the problem) widthshow
72 110 moveto (>arises that some areas of the picture are more complex than others, so) show
412 110 moveto 1 0 32 ( while some machines are) widthshow
72 130 moveto (>already done their trace and sitting idle, other machines are still grinding away.) show
72 170 moveto 2 0 32 (Not bad if you use square regions like 8x8 or 16x16 pixels with dynamic workloading.) widthshow
516 170 moveto 3 0 32 (  At) widthshow
72 190 moveto (startup every processor requests) show
226 190 moveto 1 0 32 ( one block of pixels to work on.  When he is done he will send) widthshow
72 210 moveto (his result back to the loadbalancing process and get a new pixel block) show
407 210 moveto 1 0 32 ( package to work on.  This) widthshow
72 230 moveto (gives you a good loadbalancing of the net and only introduces a) show
378 230 moveto 1 0 32 ( small amount of overhead when) widthshow
72 250 moveto (using antialising.  For antialiasing of) show
248 250 moveto 1 0 32 ( 16x16 blocks you have an overhead of about only 1/3 and) widthshow
72 270 moveto (not 3) show
96 270 moveto 1 0 32 ( times.  If you make the areas bigger this will make your overhead smaller but reduce the) widthshow
72 290 moveto 2 0 32 (amount of packages.  To get a good distribution of work you will need 20-30 packages) widthshow
519 290 moveto 3 0 32 ( per) widthshow
72 310 moveto (processor.) show
72 350 moveto 1 0 32 (>It would be nice if I had a basic) widthshow
238 350 moveto 2 0 32 ( rendering function that I could pass a list of objects and a) widthshow
72 370 moveto (>scanline #, and have it generate) show
229 370 moveto 1 0 32 ( the scanline.  Then I could concentrate on the task of splitting) widthshow
72 390 moveto (>up the job.) show
72 410 moveto (>) show
72 430 moveto (>Perhaps another aspect is a shared data file which all the tracers access, maybe this would speed) show
72 450 moveto (>up the algorithm.  I don't know.) show
72 490 moveto (All this) show
108 490 moveto 1 0 32 ( is based on my implementation of POVRay 1.0 \(soon POVRay2.0\) and Rayshade 4.06) widthshow
72 510 moveto (onto a transputer workstation with up to 129 workers.  The architecture is able to work with up to) show
72 530 moveto (526 workers.) show
72 570 moveto (-------------------------------------------------------------------------------) show
/Times-Bold findfont 13 scalefont [1 0 0 -1 0 0] makefont
31
exch
defineuserobject
31 execuserobject setfont
72 610 moveto (Notes on Parallel Ray Tracing) show
28 execuserobject setfont
240 610 moveto (, by Hsiu Lin \() show
/Courier findfont 11 scalefont [1 0 0 -1 0 0] makefont
29
exch
defineuserobject
29 execuserobject setfont
310 610 moveto (hlin@wsuaix.csc.wsu.edu) show
28 execuserobject setfont
462 610 moveto (\) and) show
90 630 moveto (Sam Uselton \() show
29 execuserobject setfont
159 630 moveto (uselton@nas.nasa.gov) show
28 execuserobject setfont
291 630 moveto (\)) show
72 670 moveto 1 0 32 ([) widthshow
/Times-Italic findfont 12 scalefont [1 0 0 -1 0 0] makefont
30
exch
defineuserobject
30 execuserobject setfont
76 670 moveto 1 0 32 (From the massively parallel rendering mailing list.) widthshow
328 670 moveto 2 0 32 (  There were many comments about these) widthshow
72 690 moveto 2 0 32 (questions, I chose Sam's as a good, broad response, and also show Lin's responses to that.) widthshow
72 710 moveto (Subscribe to the mailing list by writing ) show
/Courier-Oblique findfont 11 scalefont [1 0 0 -1 0 0] makefont
34
exch
defineuserobject
34 execuserobject setfont
262 710 moveto (mp-render-request@icase.edu) show
30 execuserobject setfont
440 710 moveto (.      -EAH) show
28 execuserobject setfont
488 710 moveto (]) show
grestore
grestore
grestore
grestore
showpage
__NXsheetsavetoken restore
%%PageTrailer
%%DocumentFonts: Courier-Oblique
%%+ Times-Bold
%%+ Times-Roman
%%+ Times-Italic
%%+ Courier
%%+ Helvetica

%%Page: 23 23
%%PageBoundingBox: 0 0 612 792
%%PageFonts: (atend)
%%BeginPageSetup
%%PaperSize: Letter
/__NXsheetsavetoken save def
0 0 translate
gsave
-20 32071 translate
 /__NXbasematrix matrix currentmatrix def
grestore
gsave
0 setgray
/Helvetica findfont 12 scalefont [1 0 0 -1 0 0] makefont
8
exch
defineuserobject
8 execuserobject setfont
1 setlinewidth
[1 0 0 -1 0 32080] concat
0 31288 translate
%%EndPageSetup
gsave
0 0 612 792 rectclip
gsave
gsave
1 setgray 0 0 612 792 rectfill
/Times-Roman findfont 12 scalefont [1 0 0 -1 0 0] makefont
28
exch
defineuserobject
28 execuserobject setfont
0 setgray
72 100 moveto (Hsiu Lin writes:) show
72 120 moveto (>>1. Are there still many groups or people interested or doing research on parallel raytracing?) show
72 160 moveto (Sam Uselton responds:) show
72 180 moveto 1 0 32 (>Ray tracing is "embarrassingly parallel," in fact, I believe the first time I read the term \(in an) widthshow
72 200 moveto 4 0 32 (>article by Gordon Bell\) ray tracing was used as) widthshow
337 200 moveto 5 0 32 ( the example to explain the concept.) widthshow
72 220 moveto (>"Embarrassingly parallel" applications are excluded from the Gordon Bell Award.) show
72 260 moveto (Lin replies:) show
72 300 moveto 4 0 32 (Yes, it is a embarrassingly parallel problem.  But, since pixel computations might vary) widthshow
72 320 moveto 2 0 32 (significantly in all screen pixels, it will result in poor results without careful scheduling.  In) widthshow
72 340 moveto (parallel computing literature,) show
212 340 moveto 1 0 32 ( you also can find lots of paper talking about how to schedule this) widthshow
72 360 moveto 1 0 32 (kind embarrassed) widthshow
157 360 moveto 2 0 32 ( paralleling problem \(even though their problem is not ray tracing\).  Check) widthshow
72 380 moveto (IEEE Transactions) show
162 380 moveto 1 0 32 ( on Computer, Dec. 1987 "guided self-scheduling" or "a practical and robust) widthshow
72 400 moveto (method for scheduling parallel loops" in Comm. of ACM,) show
72 420 moveto (Aug. 1992.) show
72 460 moveto (>Basically, if each pixel \(or set of pixels\) is computed by a single process \(that is, no single) show
512 460 moveto 1 0 32 ( pixel) widthshow
72 480 moveto 3 0 32 (>receives contributions computed by) widthshow
259 480 moveto 4 0 32 ( several processes\) then there are no synchronization) widthshow
72 500 moveto (>problems and no data dependency problems.) show
72 540 moveto (Yes, no data dependency.  But, as for synchronization, it depends on) show
401 540 moveto 1 0 32 ( the algorithm implemented.) widthshow
72 560 moveto 1 0 32 (For a) widthshow
98 560 moveto 2 0 32 ( simple example, we can use master/slave model to parallelize ray tracing.  Each slave) widthshow
72 580 moveto (requests a job from the) show
182 580 moveto 1 0 32 ( master if it needs one.  If the system is small, it works fine.  But, if we) widthshow
72 600 moveto 1 0 32 (talking about 200 or even 1024 slave nodes, the) widthshow
309 600 moveto 2 0 32 ( story is different.  The large synchronization) widthshow
72 620 moveto (overhead occurring in the master node will degrade the performance.) show
72 660 moveto 3 0 32 (>Therefore, simply porting a ray tracer to a parallel machine is not) widthshow
425 660 moveto 4 0 32 ( very interesting as a) widthshow
72 680 moveto 2 0 32 (>research project.  Research must involve some unobvious cleverness to) widthshow
438 680 moveto 3 0 32 ( exploit the parallel) widthshow
72 700 moveto (>architecture.) show
grestore
grestore
grestore
grestore
showpage
__NXsheetsavetoken restore
%%PageTrailer
%%DocumentFonts: Times-Roman
%%+ Helvetica

%%Page: 24 24
%%PageBoundingBox: 0 0 612 792
%%PageFonts: (atend)
%%BeginPageSetup
%%PaperSize: Letter
/__NXsheetsavetoken save def
0 0 translate
gsave
-20 32071 translate
 /__NXbasematrix matrix currentmatrix def
grestore
gsave
0 setgray
/Helvetica findfont 12 scalefont [1 0 0 -1 0 0] makefont
8
exch
defineuserobject
8 execuserobject setfont
1 setlinewidth
[1 0 0 -1 0 32080] concat
0 31288 translate
%%EndPageSetup
gsave
0 0 612 792 rectclip
gsave
gsave
1 setgray 0 0 612 792 rectfill
/Times-Roman findfont 12 scalefont [1 0 0 -1 0 0] makefont
28
exch
defineuserobject
28 execuserobject setfont
0 setgray
72 90 moveto (I can) show
96 90 moveto 1 0 32 ( not completely agree with this point.  How you can achieve a scalable and load balanced) widthshow
72 110 moveto 2 0 32 (parallel raytracer \(if we talking about big problem\)?  For example, millions of polygons) widthshow
519 110 moveto 3 0 32 ( are) widthshow
72 130 moveto (raytraced on a parallel machine.) show
72 170 moveto (>>2. Is parallel raytracing too simple or trivial?) show
72 210 moveto (>See above.) show
72 250 moveto (>>3. Is parallel raytracing research dead?) show
72 290 moveto (>Not entirely, but it has been worked enough that good ideas are becoming harder to find.) show
72 330 moveto 1 0 32 (>>4. Many previous) widthshow
172 330 moveto 2 0 32 ( work used SPD to test parallel raytracing.  Is it fair? Although an SPD) widthshow
72 350 moveto (>>database \(such as) show
169 350 moveto 1 0 32 ( balls, tree, mountain etc.\) can be complicated enough, most objects appear) widthshow
72 370 moveto (>>uniformly in the scenes. I doubt if it will make the tested scene itself easy to) show
451 370 moveto 1 0 32 ( be load balanced.) widthshow
72 390 moveto (>>And thus it is very easy to) show
211 390 moveto 1 0 32 ( use many different schemes to get very good speedup. Why don't) widthshow
72 410 moveto 1 0 32 (>>we view these) widthshow
155 410 moveto 2 0 32 ( scenes in different ways? It might result in more difficult scene to be load) widthshow
72 430 moveto (>>balanced.) show
72 470 moveto 1 0 32 (>SPD is a start, but) widthshow
169 470 moveto 2 0 32 ( a wider variety of scenes would seem to me to provide more info.  But) widthshow
72 490 moveto (>designing good test scenes requires much time and effort for little reward.) show
72 530 moveto 1 0 32 (I don't mean SPD is not good.  Actually, I enjoy using it very much.  I just) widthshow
448 530 moveto 2 0 32 ( mean we need to) widthshow
72 550 moveto 1 0 32 (adjust the viewpoint to keep the objects appear in) widthshow
317 550 moveto 2 0 32 ( different locations of the screen \(i.e.  more) widthshow
72 570 moveto 1 0 32 (different pixel computation distributions on the screen\) to test) widthshow
377 570 moveto 2 0 32 ( the effectiveness of parallel ray) widthshow
72 590 moveto 1 0 32 (tracing.  Otherwise, it is very easy, just like you think, to parallelize raytracing a) widthshow
471 590 moveto 2 0 32 ( self-balanced) widthshow
72 610 moveto (scene using different schemes.) show
72 650 moveto ([) show
/Times-Italic findfont 12 scalefont [1 0 0 -1 0 0] makefont
30
exch
defineuserobject
30 execuserobject setfont
76 650 moveto (This parallels some of my comments to Erik Jansen. -EAH) show
28 execuserobject setfont
356 650 moveto (]) show
72 710 moveto 3 0 32 (>>5. People said now most interesting) widthshow
271 710 moveto 4 0 32 ( problem in parallel raytracing is how to partition) widthshow
grestore
grestore
grestore
grestore
showpage
__NXsheetsavetoken restore
%%PageTrailer
%%DocumentFonts: Times-Roman
%%+ Times-Italic
%%+ Helvetica

%%Page: 25 25
%%PageBoundingBox: 0 0 612 792
%%PageFonts: (atend)
%%BeginPageSetup
%%PaperSize: Letter
/__NXsheetsavetoken save def
0 0 translate
gsave
-20 32071 translate
 /__NXbasematrix matrix currentmatrix def
grestore
gsave
0 setgray
/Helvetica findfont 12 scalefont [1 0 0 -1 0 0] makefont
8
exch
defineuserobject
8 execuserobject setfont
1 setlinewidth
[1 0 0 -1 0 32080] concat
0 31288 translate
%%EndPageSetup
gsave
0 0 612 792 rectclip
gsave
gsave
1 setgray 0 0 612 792 rectfill
/Times-Roman findfont 12 scalefont [1 0 0 -1 0 0] makefont
28
exch
defineuserobject
28 execuserobject setfont
0 setgray
72 89 moveto (>>database and distribute database.\(if database is too large to duplicate) show
414 89 moveto 1 0 32 ( at each node.\)  Since we) widthshow
72 109 moveto 1 0 32 (>>raytrace huge database, it should need huge cpu time) widthshow
347 109 moveto 2 0 32 ( to finish. When we compare this cpu) widthshow
72 129 moveto (>>time with remote data access time\(when database is distributed\), maybe the data access time is) show
72 149 moveto (>>relative small. I doubt if this issue will become the same as we) show
386 149 moveto 1 0 32 ( only consider all nodes has all) widthshow
72 169 moveto (>>duplicated database.) show
72 209 moveto (>If the database is replicated, or if you) show
257 209 moveto 1 0 32 ( are using a shared memorymachine, then you should get) widthshow
72 229 moveto 1 0 32 (>linear speed up as you add processors.  If you aren't, you should instrument your system) widthshow
518 229 moveto 2 0 32 ( and) widthshow
72 249 moveto 1 0 32 (>find the bottleneck\(s\).  Look at the papers in the Parallel Rendering Symposium and you will) widthshow
72 269 moveto (>see that distributing too small a chunk of work is inefficient, but that for) show
425 269 moveto 1 0 32 ( reasonably sized tasks,) widthshow
72 289 moveto 2 0 32 (>communication time can easily dominate compute time, when the data must be) widthshow
480 289 moveto 3 0 32 ( distributed.) widthshow
72 309 moveto (>Distribution among workstations on an ethernet) show
308 309 moveto 1 0 32 ( is fine to reduce runs that require days to runs) widthshow
72 329 moveto (>that require hours, but you can never get interactivity that way.) show
72 389 moveto (>>6. Besides loadbalancing and data) show
248 389 moveto 1 0 32 ( partition, are there any other important issues? I have one.) widthshow
72 409 moveto (>>How to predict your good speedup will drop as the number of processors increase.) show
72 449 moveto (>This issue is) show
138 449 moveto 1 0 32 ( very architecture and implementation dependent.  If you are doing a good job of) widthshow
72 469 moveto (>data partitioning and load balancing, that WILL mostly minimize the loss of efficiency.) show
72 509 moveto 1 0 32 (Yes, I believe you are) widthshow
181 509 moveto 2 0 32 ( right.  But, to design a good parallel raytracer, we can not ignore the) widthshow
72 529 moveto (architecture issue \(particularly when we are talking parallel computing\). ) show
421 529 moveto 1 0 32 ( So, how can you easily) widthshow
72 549 moveto (do a good job on both above issues?) show
72 589 moveto (Well!  How about parallel volume rendering using ray casting?  In my opinion, volume rendering) show
72 609 moveto (uses more regular) show
157 609 moveto 1 0 32 ( data and regular computation than ray tracing.  Do you agree?  If so, do you) widthshow
72 629 moveto (also think parallel volume rendering is much easier than parallel raytracing?) show
72 669 moveto (To Lin's comments, Uselton responds:) show
72 710 moveto 2 0 32 (I didn't mean to indicate that I thought that all issues) widthshow
345 710 moveto 3 0 32 ( around parallelizing ray tracing were) widthshow
grestore
grestore
grestore
grestore
showpage
__NXsheetsavetoken restore
%%PageTrailer
%%DocumentFonts: Times-Roman
%%+ Helvetica

%%Page: 26 26
%%PageBoundingBox: 0 0 612 792
%%PageFonts: (atend)
%%BeginPageSetup
%%PaperSize: Letter
/__NXsheetsavetoken save def
0 0 translate
gsave
-20 32071 translate
 /__NXbasematrix matrix currentmatrix def
grestore
gsave
0 setgray
/Helvetica findfont 12 scalefont [1 0 0 -1 0 0] makefont
8
exch
defineuserobject
8 execuserobject setfont
1 setlinewidth
[1 0 0 -1 0 32080] concat
0 31288 translate
%%EndPageSetup
gsave
0 0 612 792 rectclip
gsave
gsave
1 setgray 0 0 612 792 rectfill
/Times-Roman findfont 12 scalefont [1 0 0 -1 0 0] makefont
28
exch
defineuserobject
28 execuserobject setfont
0 setgray
72 81 moveto (solved.  What I want to emphasize is that, if I'm on a conference program committee,) show
482 81 moveto 1 0 32 ( and I see a) widthshow
72 103 moveto (paper whose total content is essentially:) show
108 147 moveto 2 0 32 ("I parallelised my ray tracer and got near linear speed up on machine x," and) widthshow
108 169 moveto (maybe some words about whether it is SIMD or) show
339 169 moveto 1 0 32 ( message passing, tightly coupled) widthshow
108 191 moveto (or network connected machines, etc.) show
72 235 moveto (I'm not very interested in the paper.) show
72 279 moveto 1 0 32 (If it includes something about how load balancing and/or distribution and access) widthshow
469 279 moveto 2 0 32 ( of very large) widthshow
72 301 moveto (data bases then it has a better chance.  But what I'm really interested) show
401 301 moveto 1 0 32 ( in at this point is work that) widthshow
72 323 moveto 4 0 32 (performs some detailed measurements and) widthshow
293 323 moveto 5 0 32 ( varies some parameters to get data on how) widthshow
72 345 moveto (performance varies in response) show
222 345 moveto 1 0 32 ( to the parameters.  And it would be even better if there is some) widthshow
72 367 moveto (cogent analysis as to why this connection should be true.) show
72 411 moveto (As I argued in a) show
149 411 moveto 1 0 32 ( paper given before a small conference about 8 or 10 years ago, the question is) widthshow
72 433 moveto (NOT "can ray tracing be parallelized?") show
259 433 moveto 1 0 32 ( but rather "which of the myriad possible ways \(that will) widthshow
72 455 moveto (ALL work to some extent\) is the best, and under what particular circumstances is this true?") show
72 521 moveto 1 0 32 (I think much of the ray casting volume rendering work is) widthshow
356 521 moveto 2 0 32 ( directly applicable to ray tracing as) widthshow
72 543 moveto 1 0 32 (well.  I think more research institutions are pursuing volume rendering because its applications) widthshow
72 565 moveto (make it more fundable.  Let me point again \(but more specifically\) to David) show
437 565 moveto 1 0 32 ( Ellsworth's paper in) widthshow
72 587 moveto 2 0 32 (the Parallel Rendering Symposium.  It is not about ray tracing, but it is exactly the) widthshow
497 587 moveto 3 0 32 ( kind of) widthshow
72 609 moveto (analysis that could be done for ray tracing \(and many other parallel applications\).) show
72 653 moveto (I hope this clarifies my position \(and restores my credentials as a) show
384 653 moveto 1 0 32 ( ray tracing enthusiast - parallel) widthshow
72 675 moveto (and otherwise\).) show
72 719 moveto (-------------------------------------------------------------------------------) show
grestore
grestore
grestore
grestore
showpage
__NXsheetsavetoken restore
%%PageTrailer
%%DocumentFonts: Times-Roman
%%+ Helvetica

%%Page: 27 27
%%PageBoundingBox: 0 0 612 792
%%PageFonts: (atend)
%%BeginPageSetup
%%PaperSize: Letter
/__NXsheetsavetoken save def
0 0 translate
gsave
-20 32071 translate
 /__NXbasematrix matrix currentmatrix def
grestore
gsave
0 setgray
/Helvetica findfont 12 scalefont [1 0 0 -1 0 0] makefont
8
exch
defineuserobject
8 execuserobject setfont
1 setlinewidth
[1 0 0 -1 0 32080] concat
0 31288 translate
%%EndPageSetup
gsave
0 0 612 792 rectclip
gsave
gsave
1 setgray 0 0 612 792 rectfill
/Times-Bold findfont 13 scalefont [1 0 0 -1 0 0] makefont
31
exch
defineuserobject
31 execuserobject setfont
0 setgray
72 90 moveto (Parallel Texturing) show
/Times-Roman findfont 12 scalefont [1 0 0 -1 0 0] makefont
28
exch
defineuserobject
28 execuserobject setfont
174 90 moveto (, by Jon Leech \() show
/Courier findfont 11 scalefont [1 0 0 -1 0 0] makefont
29
exch
defineuserobject
29 execuserobject setfont
251 90 moveto (leech@cs.unc.edu) show
28 execuserobject setfont
357 90 moveto (\) and Brian Corrie) show
90 110 moveto (\() show
29 execuserobject setfont
94 110 moveto (Brian.Corrie@cs.anu.edu.au) show
28 execuserobject setfont
266 110 moveto (\)) show
72 150 moveto (Jon Leech writes:) show
72 170 moveto 2 0 32 (>    We're implementing procedural shading models \(ala) widthshow
362 170 moveto 3 0 32 ( RenderMan\) to run on the SIMD) widthshow
72 190 moveto (>rasterizer/shader arrays in Pixel-Flow,) show
262 190 moveto 1 0 32 ( the next generation of graphics system being built here.) widthshow
72 210 moveto 1 0 32 (>The SIMD processors are) widthshow
205 210 moveto 2 0 32 ( coupled to a heavily interleaved memory for fast image texturing) widthshow
72 230 moveto (>with trilinear interpolation.) show
72 250 moveto (>) show
72 270 moveto (> ) show
82 270 moveto 1 0 32 (   I'd say one of the main problems is how to make efficient use of the SIMD processors by) widthshow
72 290 moveto (>scheduling identical operations in different shaders \(being) show
357 290 moveto 1 0 32 ( applied at disjoint pixels\) to execute) widthshow
72 310 moveto (>at the same time. This is important when using lots of shaders in the same image.) show
72 350 moveto 2 0 32 (We have done the same thing for our parallel) widthshow
305 350 moveto 3 0 32 ( volumetric/geometric renderer for the Fujitsu) widthshow
72 370 moveto 2 0 32 (AP1000.  That is, we have implemented) widthshow
277 370 moveto 3 0 32 ( an extended RenderMan-like shading language for) widthshow
72 390 moveto (procedural texturing. ) show
176 390 moveto 1 0 32 ( The extension encompasses procedural shading of a volume data set.  To) widthshow
72 410 moveto 2 0 32 (do this, we have created a new class of shader \(called a _data) widthshow
389 410 moveto 3 0 32 ( shader_\) that determines the) widthshow
72 430 moveto (shading and attenuation) show
186 430 moveto 1 0 32 ( applied at a sample point within the volume.  The shader is invoked at) widthshow
72 450 moveto (each sample point.) show
72 490 moveto (Our implementation of the shading language gives us procedural shading of surface) show
474 490 moveto 1 0 32 ( primitives as) widthshow
72 510 moveto (well.  With respect to the parallel issues of our technique, I can safely say that we have) show
489 510 moveto 1 0 32 ( addressed) widthshow
72 530 moveto 1 0 32 (approximately 0% of them) widthshow
203 530 moveto 2 0 32 ( 8-\).  The data shaders were implemented as research into volume) widthshow
72 550 moveto 1 0 32 (rendering techniques, not parallel rendering.  It just so happens) widthshow
383 550 moveto 2 0 32 ( that we have implemented the) widthshow
72 570 moveto 1 0 32 (technique on our AP1000) widthshow
198 570 moveto 2 0 32 ( as well.  Whether we go further with this research with respect to) widthshow
72 590 moveto (parallelism is unclear at this time.) show
72 630 moveto (If you are interested in more information on this work, see our) show
371 630 moveto 1 0 32 ( paper entitled ``Data Shaders'' in) widthshow
72 650 moveto (the Proceedings of Visualization '93, San Jose, California, October 1993.) show
72 690 moveto 1 0 32 (You can also check out our tech report) widthshow
265 690 moveto 2 0 32 ( ``Data Shader Language and Interface Specification'',) widthshow
72 710 moveto 6 0 32 (Technical Report TR-CS-93-02, Department of Computer Science, Australian) widthshow
489 710 moveto 7 0 32 ( National) widthshow
grestore
grestore
grestore
grestore
showpage
__NXsheetsavetoken restore
%%PageTrailer
%%DocumentFonts: Times-Bold
%%+ Times-Roman
%%+ Courier
%%+ Helvetica

%%Page: 28 28
%%PageBoundingBox: 0 0 612 792
%%PageFonts: (atend)
%%BeginPageSetup
%%PaperSize: Letter
/__NXsheetsavetoken save def
0 0 translate
gsave
-20 32071 translate
 /__NXbasematrix matrix currentmatrix def
grestore
gsave
0 setgray
/Helvetica findfont 12 scalefont [1 0 0 -1 0 0] makefont
8
exch
defineuserobject
8 execuserobject setfont
1 setlinewidth
[1 0 0 -1 0 32080] concat
0 31288 translate
%%EndPageSetup
gsave
0 0 612 792 rectclip
gsave
gsave
1 setgray 0 0 612 792 rectfill
/Times-Roman findfont 12 scalefont [1 0 0 -1 0 0] makefont
28
exch
defineuserobject
28 execuserobject setfont
0 setgray
72 90 moveto 2 0 32 (University.  It is available for anonymous ftp from) widthshow
330 90 moveto 3 0 32 ( ) widthshow
/Courier findfont 11 scalefont [1 0 0 -1 0 0] makefont
29
exch
defineuserobject
29 execuserobject setfont
336 90 moveto 3 0 32 (dcssoft.anu.edu.au) widthshow
28 execuserobject setfont
455 90 moveto 3 0 32 ( in the directory) widthshow
29 execuserobject setfont
72 109 moveto (pub/techreports/tr-cs-93-02/report.ps.Z) show
28 execuserobject setfont
72 150 moveto (And if you are really keen, or just curious) show
272 150 moveto 1 0 32 ( about the ANU ParVis Visualization Project, you can) widthshow
72 170 moveto (access an ftp based www server \(with) show
253 170 moveto 1 0 32 ( NCSA mosaic for example\) on the CAP research project,) widthshow
72 190 moveto 29 0 32 (including the ParVis Visualization Project,) widthshow
394 190 moveto 30 0 32 ( at the URL) widthshow
72 210 moveto 11 0 32 (file:) widthshow
29 execuserobject setfont
91 210 moveto 11 0 32 (//dcssoft.anu.edu.au/pub/www/dcs/cap/cap_research.html) widthshow
28 execuserobject setfont
448 210 moveto 11 0 32 (. Info on) widthshow
511 210 moveto 12 0 32 ( the) widthshow
72 230 moveto (ParVis project can be found by following) show
271 230 moveto 1 0 32 ( the ``ParVis Visualization Project'' link at the bottom) widthshow
72 250 moveto (of this document.) show
72 290 moveto (-------------------------------------------------------------------------------) show
/Times-Bold findfont 13 scalefont [1 0 0 -1 0 0] makefont
31
exch
defineuserobject
31 execuserobject setfont
72 330 moveto (Mapping Texture on a Sphere) show
28 execuserobject setfont
239 330 moveto (, by Ron Capelli \() show
29 execuserobject setfont
324 330 moveto (capelli@vnet.IBM.COM) show
28 execuserobject setfont
456 330 moveto (\)) show
72 370 moveto (D.J.James writes:) show
72 390 moveto (>I haven't had much success trying to wrap a texture around the sphere.  My first approach) show
510 390 moveto 1 0 32 ( using) widthshow
72 410 moveto (>atan2\(\) produces huge) show
185 410 moveto 1 0 32 ( distortions at multiples of 90 degrees longitude.  I tried using spherical) widthshow
72 430 moveto (>map projection equations using asin\(\) and acos\(\) without any luck.  The best shot I had using) show
525 430 moveto 1 0 32 ( an) widthshow
72 450 moveto (>equation from a gl reference book produced a beautiful image on the front of) show
448 450 moveto 1 0 32 ( the sphere but the) widthshow
72 470 moveto (>rear kind of swirled into a black hole.) show
72 490 moveto (>) show
72 510 moveto (>Can someone give me a clue as to how to wrap an image around a sphere?) show
72 550 moveto ("You can't comb the hair on a billiard ball.") show
72 590 moveto 1 0 32 (I may be mis-remembering the above quote) widthshow
287 590 moveto 2 0 32 ( slightly, and can't find the original source, but it) widthshow
72 610 moveto (refers to the problem of oriented mappings on a sphere.) show
72 650 moveto 4 0 32 (Anyway, there was a paper presented at SIGGRAPH '93 that addresses the problem of) widthshow
72 670 moveto (minimizing texture mapping distortion:) show
108 710 moveto 1 0 32 (Maillot, Yahia, and Verroust, "Interactive Texture Mapping", ACM/SIGGRAPH) widthshow
grestore
grestore
grestore
grestore
showpage
__NXsheetsavetoken restore
%%PageTrailer
%%DocumentFonts: Times-Bold
%%+ Times-Roman
%%+ Courier
%%+ Helvetica

%%Page: 29 29
%%PageBoundingBox: 0 0 612 792
%%PageFonts: (atend)
%%BeginPageSetup
%%PaperSize: Letter
/__NXsheetsavetoken save def
0 0 translate
gsave
-20 32071 translate
 /__NXbasematrix matrix currentmatrix def
grestore
gsave
0 setgray
/Helvetica findfont 12 scalefont [1 0 0 -1 0 0] makefont
8
exch
defineuserobject
8 execuserobject setfont
1 setlinewidth
[1 0 0 -1 0 32080] concat
0 31288 translate
%%EndPageSetup
gsave
0 0 612 792 rectclip
gsave
gsave
1 setgray 0 0 612 792 rectfill
/Times-Roman findfont 12 scalefont [1 0 0 -1 0 0] makefont
28
exch
defineuserobject
28 execuserobject setfont
0 setgray
108 80 moveto 2 0 32 (Computer Graphics Annual Conference Series, Proceedings of SIGGRAPH) widthshow
486 80 moveto 3 0 32 ( 93) widthshow
108 100 moveto (\(Anaheim, CA, Aug.1-6, 1993\), pp.27-34.) show
72 140 moveto (The problem was treated as a) show
212 140 moveto 1 0 32 ( global energy minimization problem, where energy was related to) widthshow
72 160 moveto (elastic deformation of the texture map.) show
72 200 moveto (Other very good papers addressing the problem in different ways are:) show
108 240 moveto 2 0 32 (Bennis, Vezien, and Iglesias, "Piecewise) widthshow
311 240 moveto 3 0 32 ( Surface Flattening for Non-Distorted) widthshow
108 260 moveto 2 0 32 (Texture Mapping", ACM/SIGGRAPH) widthshow
297 260 moveto 3 0 32 ( Computer Graphics, Vol.25, No.4, July) widthshow
108 280 moveto 1 0 32 (1991, Proceedings of SIGGRAPH 91 \(Las Vegas, NV, July 28 - Aug.) widthshow
454 280 moveto 2 0 32 ( 2, 1991\),) widthshow
108 300 moveto (pp.237-246.) show
108 340 moveto 1 0 32 (Bier and Sloan, "Two-part texture mapping",) widthshow
329 340 moveto 2 0 32 ( IEEE CG&A, Vol. 6, Sept. 1986,) widthshow
108 360 moveto (pp.40-53.) show
72 400 moveto (-------------------------------------------------------------------------------) show
/Times-Bold findfont 13 scalefont [1 0 0 -1 0 0] makefont
31
exch
defineuserobject
31 execuserobject setfont
72 440 moveto (Computational Geometry in C) show
28 execuserobject setfont
241 440 moveto (, by Joseph O'Rourke ) show
90 460 moveto (\() show
/Courier findfont 11 scalefont [1 0 0 -1 0 0] makefont
29
exch
defineuserobject
29 execuserobject setfont
94 460 moveto (orourke@sophia.smith.edu) show
28 execuserobject setfont
252 460 moveto (\)) show
72 500 moveto ([) show
/Times-Italic findfont 12 scalefont [1 0 0 -1 0 0] makefont
30
exch
defineuserobject
30 execuserobject setfont
76 500 moveto (This looks like an interesting book; I've ordered a copy and hope to review) show
72 520 moveto (it in the future. -EAH) show
28 execuserobject setfont
174 520 moveto (]) show
72 560 moveto (  author =) show
147 560 moveto ("Joseph O'Rourke") show
72 580 moveto (  title =) show
147 580 moveto ("Computational Geometry in {C}") show
72 600 moveto (  publisher =) show
147 600 moveto ("Cambridge University Press") show
72 620 moveto (  year =) show
147 620 moveto (1993) show
72 640 moveto (  note =) show
147 640 moveto ("In stock on 28 January 1994.) show
147 660 moveto (ISBN 0-521-44592-2/Pb \\$24.95,) show
147 680 moveto (ISBN 0-521-44034-3/Hc \\$49.95.) show
147 700 moveto (Cambridge University Press,) show
147 720 moveto (40 West 20th Street,) show
grestore
grestore
grestore
grestore
showpage
__NXsheetsavetoken restore
%%PageTrailer
%%DocumentFonts: Times-Bold
%%+ Times-Roman
%%+ Times-Italic
%%+ Courier
%%+ Helvetica

%%Page: 30 30
%%PageBoundingBox: 0 0 612 792
%%PageFonts: (atend)
%%BeginPageSetup
%%PaperSize: Letter
/__NXsheetsavetoken save def
0 0 translate
gsave
-20 32071 translate
 /__NXbasematrix matrix currentmatrix def
grestore
gsave
0 setgray
/Helvetica findfont 12 scalefont [1 0 0 -1 0 0] makefont
8
exch
defineuserobject
8 execuserobject setfont
1 setlinewidth
[1 0 0 -1 0 32080] concat
0 31288 translate
%%EndPageSetup
gsave
0 0 612 792 rectclip
gsave
gsave
1 setgray 0 0 612 792 rectfill
/Times-Roman findfont 12 scalefont [1 0 0 -1 0 0] makefont
28
exch
defineuserobject
28 execuserobject setfont
0 setgray
147 90 moveto (New York, NY 10011-4211.) show
147 110 moveto (1-800-872-7423.") show
72 130 moveto (  note =) show
147 130 moveto ("346+xi pages, 228 exercises, 200 figures, 219 references") show
72 150 moveto (  comments =) show
147 150 moveto ("Chapter titles:) show
108 170 moveto (1. Polygon triangulation) show
108 190 moveto (2. Polygon partitioning) show
108 210 moveto (3. Convex hulls in two dimensions) show
108 230 moveto (4. Convex hulls in three dimensions) show
108 250 moveto (5. Voronoi diagrams) show
108 270 moveto (6. Arrangements) show
108 290 moveto (7. Search and intersection) show
108 310 moveto (8. Motion planning) show
108 330 moveto (9. Additional topics") show
72 350 moveto (  annote =) show
147 350 moveto ("Textbook") show
72 390 moveto (-------------------------------------------------------------------------------) show
/Times-Bold findfont 13 scalefont [1 0 0 -1 0 0] makefont
31
exch
defineuserobject
31 execuserobject setfont
72 430 moveto (Programming for Graphics Files in C and C++) show
28 execuserobject setfont
332 430 moveto (, by John R Levine) show
90 450 moveto (\() show
/Courier findfont 11 scalefont [1 0 0 -1 0 0] makefont
29
exch
defineuserobject
29 execuserobject setfont
94 450 moveto (johnl@chico.iecc.com) show
28 execuserobject setfont
226 450 moveto (\)) show
72 490 moveto 2 0 32 (John Levine, ) widthshow
/Times-Bold findfont 12 scalefont [1 0 0 -1 0 0] makefont
32
exch
defineuserobject
32 execuserobject setfont
141 490 moveto 2 0 32 (Programming for Graphics Files) widthshow
315 490 moveto 3 0 32 ( in C and C++) widthshow
28 execuserobject setfont
399 490 moveto 3 0 32 (, John Wiley, ISBN 0-471-) widthshow
72 510 moveto (59856-9 \(with disk\), ISBN 0-471-59854-2 \(no disk\).  $29.95 without disk, $49.95 with disk.) show
72 550 moveto (The book discusses programs that read and write graphics files in a variety of formats. ) show
489 550 moveto 1 0 32 ( The book) widthshow
72 570 moveto 1 0 32 (is about 60% C and C++ code, much based on the well-known PBMPLUS) widthshow
442 570 moveto 2 0 32 ( library, the Leffler) widthshow
72 590 moveto (TIFF library, and the Independent JPEG group's JPEG software.  \(The disk has the full) show
491 590 moveto 1 0 32 ( source of) widthshow
72 610 moveto 1 0 32 (all three, the book is just the most interesting parts, since) widthshow
355 610 moveto 2 0 32 ( otherwise it would have been about) widthshow
72 630 moveto 2 0 32 (2000 pages long.\)  There is also new code for) widthshow
309 630 moveto 3 0 32 ( C++ image memory management in limited) widthshow
72 650 moveto 2 0 32 (memory environments like DOS, and some) widthshow
290 650 moveto 3 0 32 ( new file management code to read formats not) widthshow
72 670 moveto (handled by PBM such as HP-GL files and) show
274 670 moveto 1 0 32 ( Windows BMP.  As far as I am concerned, all of the) widthshow
72 690 moveto (code is freely redistributable.) show
grestore
grestore
grestore
grestore
showpage
__NXsheetsavetoken restore
%%PageTrailer
%%DocumentFonts: Times-Bold
%%+ Times-Roman
%%+ Courier
%%+ Helvetica

%%Page: 31 31
%%PageBoundingBox: 0 0 612 792
%%PageFonts: (atend)
%%BeginPageSetup
%%PaperSize: Letter
/__NXsheetsavetoken save def
0 0 translate
gsave
-20 32071 translate
 /__NXbasematrix matrix currentmatrix def
grestore
gsave
0 setgray
/Helvetica findfont 12 scalefont [1 0 0 -1 0 0] makefont
8
exch
defineuserobject
8 execuserobject setfont
1 setlinewidth
[1 0 0 -1 0 32080] concat
0 31288 translate
%%EndPageSetup
gsave
0 0 612 792 rectclip
gsave
gsave
1 setgray 0 0 612 792 rectfill
/Times-Roman findfont 12 scalefont [1 0 0 -1 0 0] makefont
28
exch
defineuserobject
28 execuserobject setfont
0 setgray
72 90 moveto (After discussing general principles of graphics file wrangling, the book) show
414 90 moveto 1 0 32 ( exhibits and explains the) widthshow
72 110 moveto (code to read and write 13 formats.) show
72 150 moveto (It's available at bookstores, or direct from Wiley at 1-800-879-4539.) show
72 190 moveto (-------------------------------------------------------------------------------) show
/Times-Bold findfont 13 scalefont [1 0 0 -1 0 0] makefont
31
exch
defineuserobject
31 execuserobject setfont
72 230 moveto (Point in Polygon, the Quick Answer) show
28 execuserobject setfont
271 230 moveto (, by Wm. Randolph Franklin and Eric Haines) show
72 270 moveto 2 0 32 (Wm.  Randolph Franklin \() widthshow
/Courier findfont 11 scalefont [1 0 0 -1 0 0] makefont
29
exch
defineuserobject
29 execuserobject setfont
207 270 moveto 2 0 32 (wrf@ecse.rpi.edu) widthshow
28 execuserobject setfont
313 270 moveto 2 0 32 (\) posted a nine line algorithm for the) widthshow
502 270 moveto 3 0 32 ( classic) widthshow
72 290 moveto (question "How do I detect if a point is inside) show
287 290 moveto 1 0 32 ( a polygon?"  I made a few minor speed hacks, got) widthshow
72 310 moveto 1 0 32 (rid of a little code, and made it shoot a ray along X+ \(which I'm used to\),) widthshow
440 310 moveto 2 0 32 ( but it's mostly his.) widthshow
72 330 moveto (Since we've beaten) show
165 330 moveto 1 0 32 ( this one to death in these pages, I thought I'd give his nice short \(though a) widthshow
72 350 moveto (tad dense it's mostly just one big if statement\) answer \(8 lines\).  Here 'tis:) show
/Courier findfont 10 scalefont [1 0 0 -1 0 0] makefont
36
exch
defineuserobject
36 execuserobject setfont
90 390 moveto (int pnpoly\(int npol, float *xp, float *yp, float x, float y\)) show
90 408 moveto ({) show
108 408 moveto (int     i, j, c = 0;) show
108 428 moveto (for \(i = 0, j = npol-1; i < npol; j = i++\) {) show
126 448 moveto (if \(\(\(\(yp[i]<=y\) && \(y<yp[j]\)\) || \(\(yp[j]<=y\) && \(y<yp[i]\)\)\) ) show
147 468 moveto (&&) show
126 488 moveto (\(x < \(xp[j] - xp[i]\) * \(y - yp[i]\) / \(yp[j] - yp[i]\) + xp[i]\)\)) show
126 508 moveto (c = !c;     }) show
108 528 moveto (return c;  }) show
28 execuserobject setfont
72 570 moveto 2 0 32 (Running it in my) widthshow
160 570 moveto 3 0 32 ( pt-in-poly testbed I found this routine to be about 20% slower than my) widthshow
72 590 moveto (optimized crossings test \(in the upcoming Graphics Gems IV\).) show
72 630 moveto (-------------------------------------------------------------------------------) show
31 execuserobject setfont
72 670 moveto (Elib and NetNews Information) show
28 execuserobject setfont
243 670 moveto (, by Eric Haines) show
72 710 moveto 1 0 32 (There is) widthshow
112 710 moveto 2 0 32 ( an interesting pair of resources I just found out about from "Wired" magazine.  By) widthshow
grestore
grestore
grestore
grestore
showpage
__NXsheetsavetoken restore
%%PageTrailer
%%DocumentFonts: Times-Bold
%%+ Times-Roman
%%+ Courier
%%+ Helvetica

%%Page: 32 32
%%PageBoundingBox: 0 0 612 792
%%PageFonts: (atend)
%%BeginPageSetup
%%PaperSize: Letter
/__NXsheetsavetoken save def
0 0 translate
gsave
-20 32071 translate
 /__NXbasematrix matrix currentmatrix def
grestore
gsave
0 setgray
/Helvetica findfont 12 scalefont [1 0 0 -1 0 0] makefont
8
exch
defineuserobject
8 execuserobject setfont
1 setlinewidth
[1 0 0 -1 0 32080] concat
0 31288 translate
%%EndPageSetup
gsave
0 0 612 792 rectclip
gsave
gsave
1 setgray 0 0 612 792 rectfill
/Times-Roman findfont 12 scalefont [1 0 0 -1 0 0] makefont
28
exch
defineuserobject
28 execuserobject setfont
0 setgray
72 80 moveto 3 0 32 (writing <) widthshow
/Courier findfont 11 scalefont [1 0 0 -1 0 0] makefont
29
exch
defineuserobject
29 execuserobject setfont
119 80 moveto 3 0 32 (elib@DB.Stanford.EDU) widthshow
28 execuserobject setfont
251 80 moveto 3 0 32 (> and <) widthshow
29 execuserobject setfont
294 80 moveto 3 0 32 (netnews@db.stanford.edu) widthshow
28 execuserobject setfont
446 80 moveto 3 0 32 (> and sending the) widthshow
72 100 moveto 1 0 32 (message "help" \(no subject\) to each, you can find out about them, too. ) widthshow
425 100 moveto 2 0 32 ( Elib lets you search a) widthshow
72 120 moveto 1 0 32 (computer science reference database at Stanford for keywords.  It's) widthshow
404 120 moveto 2 0 32 ( not very extensive \(dating) widthshow
72 140 moveto (back to 1991 at best\), but the response is immediate and the price is) show
397 140 moveto 1 0 32 ( right \(free\).  For example, it) widthshow
72 160 moveto (turned up this, which I hadn't heard of:) show
72 200 moveto ( Author :) show
147 200 moveto (Garland, M. J.) show
72 220 moveto ( Title :) show
147 220 moveto (Portable parallel ray tracing algorithms.) show
72 240 moveto ( Institute :) show
147 240 moveto (Carnegie-Mellon University. Department of Computer Science.) show
72 260 moveto ( Report :) show
147 260 moveto (CMU-CS-93-176.) show
72 280 moveto ( Date :) show
147 280 moveto (1993.) show
72 300 moveto ( Keyword :) show
147 300 moveto (Realistic rendering.) show
72 320 moveto ( Keyword :) show
147 320 moveto (Ray tracing.) show
72 340 moveto ( Keyword :) show
147 340 moveto (Parallel ray tracing.) show
72 400 moveto (NetNews is like Elib, but) show
193 400 moveto 1 0 32 ( the server searches recent News on the net using keywords.  You can) widthshow
72 420 moveto (also set searches on keywords so that it will daily \(or) show
326 420 moveto 1 0 32 ( at whatever frequency you want\) send you) widthshow
72 440 moveto (the first part of any messages that match.  I do recommend that you set the threshold to 60,) show
507 440 moveto 1 0 32 ( as the) widthshow
72 460 moveto (default is 50) show
131 460 moveto 1 0 32 ( \(not 70, as it says in the documents\).  At 50 and the keyword "ray tracing", I was) widthshow
72 480 moveto 1 0 32 (getting matches on rebuilding engines, how much LSD Jerry Garcia uses,) widthshow
435 480 moveto 2 0 32 ( abortion discussions) widthshow
72 500 moveto (and all kinds of other) show
174 500 moveto 1 0 32 ( random stuff - amusing for a few days, but it wears thin.  Anyway, as an) widthshow
72 520 moveto (example, here's one that NetNews found today that I would have never run across otherwise:) show
72 580 moveto (>From: ) show
29 execuserobject setfont
111 580 moveto (pjg@parint.esl.com) show
28 execuserobject setfont
230 580 moveto ( \(Paul Gyugyi\)) show
72 600 moveto (Newsgroups: rec.toys.lego) show
29 execuserobject setfont
72 639 moveto (dpenney@morgan.ucs.mun.ca) show
28 execuserobject setfont
237 639 moveto ( \(Dave Penney\) writes:) show
108 680 moveto (2a\) If I was to design my own Lego set from Lego standard pieces,) show
429 680 moveto 1 0 32 ( where would I) widthshow
108 700 moveto (be able to post this for others? \(FTP,) show
283 700 moveto 1 0 32 ( Pictures, or would LEGO be willing to take) widthshow
108 720 moveto (it?\)) show
grestore
grestore
grestore
grestore
showpage
__NXsheetsavetoken restore
%%PageTrailer
%%DocumentFonts: Times-Roman
%%+ Courier
%%+ Helvetica

%%Page: 33 33
%%PageBoundingBox: 0 0 612 792
%%PageFonts: (atend)
%%BeginPageSetup
%%PaperSize: Letter
/__NXsheetsavetoken save def
0 0 translate
gsave
-20 32071 translate
 /__NXbasematrix matrix currentmatrix def
grestore
gsave
0 setgray
/Helvetica findfont 12 scalefont [1 0 0 -1 0 0] makefont
8
exch
defineuserobject
8 execuserobject setfont
1 setlinewidth
[1 0 0 -1 0 32080] concat
0 31288 translate
%%EndPageSetup
gsave
0 0 612 792 rectclip
gsave
gsave
1 setgray 0 0 612 792 rectfill
/Times-Roman findfont 12 scalefont [1 0 0 -1 0 0] makefont
28
exch
defineuserobject
28 execuserobject setfont
0 setgray
108 110 moveto (2b\) How \(or which would be the easiest way\) to transcribe this down onto paper?) show
72 150 moveto 2 0 32 (There are a variety of CAD tools for lego on the earthsea archive,) widthshow
411 150 moveto 3 0 32 ( but nothing that doesn't) widthshow
72 170 moveto (require some work.  If you can sketch down your instructions and fax) show
406 170 moveto 1 0 32 ( them to me, I'll pass them) widthshow
72 190 moveto (along to other CAD developers to use as) show
266 190 moveto 1 0 32 ( a test bed for adding new features to the programs.  In) widthshow
72 210 moveto 1 0 32 (earthsea:/pub/lego/CAD, you will find some Postscript tools, some ray tracing tools,) widthshow
487 210 moveto 2 0 32 ( and some) widthshow
72 230 moveto (parts libraries for drafting programs.  But I've found isometric graph paper \(with 30 degree) show
509 230 moveto 1 0 32 ( lines\)) widthshow
72 250 moveto (is easiest to) show
127 250 moveto 1 0 32 ( use, actually.  We've been working on a standard input file format, something that) widthshow
72 270 moveto (you can type in ASCII and feed into other programs.) show
72 310 moveto 1 0 32 (Stefan and I are working on a front end) widthshow
269 310 moveto 2 0 32 ( to "Rayshade", a 3D raytracing program.  If you are) widthshow
72 330 moveto (interested in describing your models in our format, or) show
329 330 moveto 1 0 32 ( if you are willing to sit down with a ruler) widthshow
72 350 moveto (and add descriptions of some lego pieces to our parts library, it would be appreciated.) show
72 390 moveto (-------------------------------------------------------------------------------) show
/Times-Bold findfont 13 scalefont [1 0 0 -1 0 0] makefont
31
exch
defineuserobject
31 execuserobject setfont
72 430 moveto (CFP: 5th Eurographics Workshop on Rendering) show
28 execuserobject setfont
342 430 moveto (, by Georgios Sakas) show
72 470 moveto (Darmstadt, Germany  13-15 June 1994) show
/Times-Bold findfont 12 scalefont [1 0 0 -1 0 0] makefont
32
exch
defineuserobject
32 execuserobject setfont
72 510 moveto (Aims and Scope) show
28 execuserobject setfont
154 510 moveto (:  Following four successful workshops \(Rennes-1990, Barcelona-1991,) show
499 510 moveto 1 0 32 ( Bristol-) widthshow
72 530 moveto (1992, Paris-1993\) we announce the fifth) show
265 530 moveto 1 0 32 ( workshop on rendering techniques.  In the recent years) widthshow
72 550 moveto (the workshop has been well established as a major) show
314 550 moveto 1 0 32 ( international forum in exchanging experience) widthshow
72 570 moveto (and knowledge between people from universities, research and industry interested in the different) show
72 590 moveto (aspects of rendering techniques.) show
32 execuserobject setfont
72 650 moveto (Main topics include) show
28 execuserobject setfont
173 650 moveto ( \(but are not restricted to\):) show
72 670 moveto (  ) show
90 670 moveto (- Radiosity) show
72 690 moveto (   ) show
90 690 moveto (- Ray tracing) show
72 710 moveto (   ) show
90 710 moveto (- Illumination models) show
grestore
grestore
grestore
grestore
showpage
__NXsheetsavetoken restore
%%PageTrailer
%%DocumentFonts: Times-Bold
%%+ Times-Roman
%%+ Helvetica

%%Page: 34 34
%%PageBoundingBox: 0 0 612 792
%%PageFonts: (atend)
%%BeginPageSetup
%%PaperSize: Letter
/__NXsheetsavetoken save def
0 0 translate
gsave
-20 32071 translate
 /__NXbasematrix matrix currentmatrix def
grestore
gsave
0 setgray
/Helvetica findfont 12 scalefont [1 0 0 -1 0 0] makefont
8
exch
defineuserobject
8 execuserobject setfont
1 setlinewidth
[1 0 0 -1 0 32080] concat
0 31288 translate
%%EndPageSetup
gsave
0 0 612 792 rectclip
gsave
gsave
1 setgray 0 0 612 792 rectfill
/Times-Roman findfont 12 scalefont [1 0 0 -1 0 0] makefont
28
exch
defineuserobject
28 execuserobject setfont
0 setgray
72 86 moveto (   ) show
90 86 moveto (- Colour, texture) show
72 105 moveto (   ) show
90 105 moveto (- Sampling, filtering, anti-aliasing) show
72 124 moveto (   ) show
90 124 moveto (- Parallel solutions for rendering) show
/Times-Bold findfont 12 scalefont [1 0 0 -1 0 0] makefont
32
exch
defineuserobject
32 execuserobject setfont
72 162 moveto (Two special themes of this workshop are) show
28 execuserobject setfont
279 162 moveto (:) show
90 181 moveto (- Illumination & rendering of participating media \(volume objects, clouds, ...\)) show
90 200 moveto 1 0 32 (- Rendering of architectural & CAD models \(illumination) widthshow
374 200 moveto 2 0 32 ( simulation, real-time rendering, ) widthshow
90 219 moveto (walkthroughs, handling of large datasets, ...\)) show
72 257 moveto 5 0 32 (We encourage also papers describing on-going research and providing new techniques,) widthshow
72 276 moveto (perspectives and applications in the field.) show
271 276 moveto 1 0 32 (  Discussions and evaluation of current techniques and) widthshow
72 295 moveto (future trends greatly contribute to the attractivity of the) show
337 295 moveto 1 0 32 ( workshop.  Thus, the presentation of the) widthshow
72 314 moveto 2 0 32 (papers to the plenum will be followed by a discussion introduced by an expert of) widthshow
488 314 moveto 3 0 32 ( the field.) widthshow
72 333 moveto (Internationally renowned speakers from research and industry will also present invited papers.) show
32 execuserobject setfont
72 371 moveto (Schedule) show
28 execuserobject setfont
118 371 moveto (: 5 April    1994  Submission deadline) show
90 390 moveto (  5 May) show
162 390 moveto (1994  Notification of acceptance for presentation) show
90 409 moveto (  30 May     ) show
162 409 moveto (1994  Full-paper deadline for the workshop proceedings) show
90 428 moveto (  13-15 June ) show
162 428 moveto (1994  Workshop) show
72 466 moveto 1 0 32 (For [the full posting,]) widthshow
178 466 moveto 2 0 32 ( detailed information, rendering databases, and authors toolkit including) widthshow
72 485 moveto 16 0 32 (latex styling formats contact) widthshow
256 485 moveto 17 0 32 ( ) widthshow
/Courier findfont 11 scalefont [1 0 0 -1 0 0] makefont
29
exch
defineuserobject
29 execuserobject setfont
276 485 moveto 17 0 32 (haas@igd.fhg.de) widthshow
28 execuserobject setfont
375 485 moveto 17 0 32 (, ) widthshow
29 execuserobject setfont
398 485 moveto 17 0 32 (gsakas@igd.fhg.de) widthshow
28 execuserobject setfont
510 485 moveto 17 0 32 ( or) widthshow
29 execuserobject setfont
72 503 moveto (shirley@cs.indiana.edu) show
28 execuserobject setfont
72 542 moveto (-------------------------------------------------------------------------------) show
/Times-Bold findfont 13 scalefont [1 0 0 -1 0 0] makefont
31
exch
defineuserobject
31 execuserobject setfont
72 581 moveto (CFP: 5th EG workshop on Animation & Simulation) show
28 execuserobject setfont
361 581 moveto (, by Gerard Hegron) show
90 599 moveto (\() show
29 execuserobject setfont
94 599 moveto (hegron@irisa.fr) show
28 execuserobject setfont
193 599 moveto (\)) show
72 637 moveto (Oslo, Norway  17-18 September 1994) show
32 execuserobject setfont
72 675 moveto (AIMS AND SCOPE) show
28 execuserobject setfont
175 675 moveto (:) show
72 713 moveto (The Eurographics workshop on Animation and Simulation has become) show
413 713 moveto 1 0 32 ( an international forum of) widthshow
grestore
grestore
grestore
grestore
showpage
__NXsheetsavetoken restore
%%PageTrailer
%%DocumentFonts: Times-Bold
%%+ Times-Roman
%%+ Courier
%%+ Helvetica

%%Page: 35 35
%%PageBoundingBox: 0 0 612 792
%%PageFonts: (atend)
%%BeginPageSetup
%%PaperSize: Letter
/__NXsheetsavetoken save def
0 0 translate
gsave
-20 32071 translate
 /__NXbasematrix matrix currentmatrix def
grestore
gsave
0 setgray
/Helvetica findfont 12 scalefont [1 0 0 -1 0 0] makefont
8
exch
defineuserobject
8 execuserobject setfont
1 setlinewidth
[1 0 0 -1 0 32080] concat
0 31288 translate
%%EndPageSetup
gsave
0 0 612 792 rectclip
gsave
gsave
1 setgray 0 0 612 792 rectfill
/Times-Roman findfont 12 scalefont [1 0 0 -1 0 0] makefont
28
exch
defineuserobject
28 execuserobject setfont
0 setgray
72 80 moveto 4 0 32 (high quality for exchanging experience) widthshow
276 80 moveto 5 0 32 ( and knowledge between people representing the) widthshow
72 99 moveto 1 0 32 (animation and simulation communities on) widthshow
278 99 moveto 2 0 32 ( the general themes of modeling, animation, motion) widthshow
72 118 moveto (control, simulation and visualization of dynamic scenes.) show
/Times-Bold findfont 12 scalefont [1 0 0 -1 0 0] makefont
32
exch
defineuserobject
32 execuserobject setfont
72 158 moveto (SCHEDULE) show
28 execuserobject setfont
138 158 moveto (:) show
72 198 moveto (May  1 :) show
147 198 moveto (deadline for extended abstract) show
72 238 moveto (June 1 :) show
147 238 moveto (notification of acceptance for the workshop) show
72 278 moveto (July 15 :) show
147 278 moveto (full papers) show
72 318 moveto (September 17-18 :) show
204 318 moveto (workshop) show
72 358 moveto (Write Gerard or Olov Fahlander \() show
/Courier findfont 11 scalefont [1 0 0 -1 0 0] makefont
29
exch
defineuserobject
29 execuserobject setfont
234 358 moveto (olov-f@isy.liu.se) show
28 execuserobject setfont
346 358 moveto (\) for the full posting.) show
72 398 moveto (-------------------------------------------------------------------------------) show
/Times-Bold findfont 13 scalefont [1 0 0 -1 0 0] makefont
31
exch
defineuserobject
31 execuserobject setfont
72 438 moveto (Morphology Digest) show
28 execuserobject setfont
179 438 moveto (, by Henk Heijmans \() show
29 execuserobject setfont
281 438 moveto (henkh@cwi.nl) show
28 execuserobject setfont
361 438 moveto (\)) show
72 478 moveto (Some time ago we announced the) show
234 478 moveto 1 0 32 ( "Morphology Digest", an electronic newsletter for workers in) widthshow
72 498 moveto 1 0 32 (the field of mathematical morphology, stochastic geometry, random) widthshow
405 498 moveto 2 0 32 ( set theory, image algebra,) widthshow
72 518 moveto (etc.  It provides fast and up-to-date information on:) show
72 558 moveto (  1. Conferences, workshops, courses) show
72 578 moveto (  2. Books, articles, reports, PhD theses) show
72 598 moveto (  3. Algorithms, software, hardware) show
72 618 moveto (  4. Available research positions) show
72 638 moveto (  5. Bibliographical data) show
72 678 moveto (relevant to anyone interested in mathematical morphology.) show
72 718 moveto (The digest appears every six weeks and has approximately 500 subscribers.) show
grestore
grestore
grestore
grestore
showpage
__NXsheetsavetoken restore
%%PageTrailer
%%DocumentFonts: Times-Bold
%%+ Times-Roman
%%+ Courier
%%+ Helvetica

%%Page: 36 36
%%PageBoundingBox: 0 0 612 792
%%PageFonts: (atend)
%%BeginPageSetup
%%PaperSize: Letter
/__NXsheetsavetoken save def
0 0 translate
gsave
-20 32071 translate
 /__NXbasematrix matrix currentmatrix def
grestore
gsave
0 setgray
/Helvetica findfont 12 scalefont [1 0 0 -1 0 0] makefont
8
exch
defineuserobject
8 execuserobject setfont
1 setlinewidth
[1 0 0 -1 0 32080] concat
0 31288 translate
%%EndPageSetup
gsave
0 0 612 792 rectclip
gsave
gsave
1 setgray 0 0 612 792 rectfill
/Times-Roman findfont 12 scalefont [1 0 0 -1 0 0] makefont
28
exch
defineuserobject
28 execuserobject setfont
0 setgray
72 110 moveto (Subscribe:  email to ) show
/Courier findfont 11 scalefont [1 0 0 -1 0 0] makefont
29
exch
defineuserobject
29 execuserobject setfont
171 110 moveto (morpho@cwi.nl) show
28 execuserobject setfont
256 110 moveto ( with "subscribe" as subject and empty message body.) show
72 150 moveto 2 0 32 (Unsubscribe:  email to ) widthshow
29 execuserobject setfont
191 150 moveto 2 0 32 (morpho@cwi.nl) widthshow
28 execuserobject setfont
277 150 moveto 2 0 32 ( with) widthshow
303 150 moveto 3 0 32 ( "unsubscribe" followed by email address as ) widthshow
90 170 moveto (subject and empty message body.) show
72 210 moveto (Submissions:  email to ) show
29 execuserobject setfont
184 210 moveto (morpho@cwi.nl) show
28 execuserobject setfont
270 210 moveto ( with "submit" as subject.) show
72 250 moveto (Archive site:  anonymous ftp to ) show
29 execuserobject setfont
227 250 moveto (ftp.cwi.nl) show
28 execuserobject setfont
293 250 moveto ( [192.16.184.180]; directory ) show
29 execuserobject setfont
90 270 moveto (/pub/morphology/digest) show
28 execuserobject setfont
72 310 moveto 3 0 32 ([) widthshow
/Times-Italic findfont 12 scalefont [1 0 0 -1 0 0] makefont
30
exch
defineuserobject
30 execuserobject setfont
76 310 moveto 3 0 32 (This digest is not about morphing, it is much more oriented to image) widthshow
442 310 moveto 4 0 32 ( processing, object) widthshow
72 330 moveto 1 0 32 (recognition, texture) widthshow
168 330 moveto 2 0 32 ( classification, etc.  It's a pretty serious \(and useful\) journal, if this area) widthshow
72 350 moveto (interests you. -EAH) show
28 execuserobject setfont
166 350 moveto (]) show
72 390 moveto (-------------------------------------------------------------------------------) show
/Times-Bold findfont 13 scalefont [1 0 0 -1 0 0] makefont
31
exch
defineuserobject
31 execuserobject setfont
72 430 moveto (Position of the Sun) show
28 execuserobject setfont
176 430 moveto (, by Joe Cychosz \() show
29 execuserobject setfont
265 430 moveto (3ksnn64@ecn.purdue.edu) show
28 execuserobject setfont
410 430 moveto (\)) show
72 470 moveto (I didn't try to analyze [James Ashton's] code [in RTNv6n3 for sun position].  But, I assume it's) show
531 470 moveto 1 0 32 ( a) widthshow
72 490 moveto 1 0 32 (quick hack.  It doesn't consider latitude, for one thing.  I) widthshow
354 490 moveto 2 0 32 ( didn't check his time equations, but) widthshow
72 510 moveto (there is nothing to correct for timezone.  Maybe he's working with GMT all the) show
454 510 moveto 1 0 32 ( time and what is) widthshow
72 530 moveto (this floating point month stuff?  The lengths of the months varies from month to month.) show
72 570 moveto (The following code computes the direction to the sun, give location on the earth \(lon, lat\)) show
500 570 moveto 1 0 32 ( and the) widthshow
72 590 moveto (time.  A correction angle \(gamma\) can be) show
272 590 moveto 1 0 32 ( specified so the sweep of the sun can be aligned with) widthshow
72 610 moveto 1 0 32 (the world coordinate system.) widthshow
214 610 moveto 2 0 32 (  Thus the structure can be nicely modeled along the coordinate) widthshow
72 630 moveto (system.  Some years ago I did a short film of an energy efficient house build here at Purdue.  One) show
72 650 moveto (of the key) show
120 650 moveto 1 0 32 ( pieces of technology was the design of the overhangs over the windows which were) widthshow
72 670 moveto (designed to keep the sun out in the summer and let it in in the winter.  The) show
429 670 moveto 1 0 32 ( film demonstrated the) widthshow
72 690 moveto (effects of the overhangs on the penetration of sun into the house at various times of the year.) show
grestore
grestore
grestore
grestore
showpage
__NXsheetsavetoken restore
%%PageTrailer
%%DocumentFonts: Times-Bold
%%+ Times-Roman
%%+ Times-Italic
%%+ Courier
%%+ Helvetica

%%Page: 37 37
%%PageBoundingBox: 0 0 612 792
%%PageFonts: (atend)
%%BeginPageSetup
%%PaperSize: Letter
/__NXsheetsavetoken save def
0 0 translate
gsave
-20 32071 translate
 /__NXbasematrix matrix currentmatrix def
grestore
gsave
0 setgray
/Helvetica findfont 12 scalefont [1 0 0 -1 0 0] makefont
8
exch
defineuserobject
8 execuserobject setfont
1 setlinewidth
[1 0 0 -1 0 32080] concat
0 31288 translate
%%EndPageSetup
gsave
0 0 612 792 rectclip
gsave
gsave
1 setgray 0 0 612 792 rectfill
/Times-Roman findfont 12 scalefont [1 0 0 -1 0 0] makefont
28
exch
defineuserobject
28 execuserobject setfont
0 setgray
72 90 moveto (Hopefully the code has sufficient documentation) show
306 90 moveto 1 0 32 ( to enable one to use.  This code has only been) widthshow
72 110 moveto (tested in the northern hemisphere.  A quick note about the coordinate system:) show
444 110 moveto 1 0 32 (  y is up, x is right,) widthshow
72 130 moveto (z is out.) show
72 170 moveto (Joe Cychosz) show
/Courier findfont 10 scalefont [1 0 0 -1 0 0] makefont
36
exch
defineuserobject
36 execuserobject setfont
72 208 moveto (#include) show
147 208 moveto (<math.h>) show
72 228 moveto (#include) show
147 228 moveto ("GraphicsGems.h") show
72 268 moveto (#define pi) show
147 268 moveto (3.14159265358979323846264338) show
72 288 moveto (#define) show
147 288 moveto (rad2deg) show
204 288 moveto (\(180./pi\)) show
72 308 moveto (#define) show
147 308 moveto (deg2rad) show
204 308 moveto (\(pi/180.\)) show
72 348 moveto (/* ----) show
147 348 moveto (trigd.h - Degree based trig functions. ------------) show
489 348 moveto (*/) show
72 388 moveto (#define) show
147 388 moveto (cosd\(t\)) show
261 388 moveto (\(cos \( 0.01745329251994 * \(t\) \)\)) show
72 408 moveto (#define) show
147 408 moveto (sind\(t\)) show
261 408 moveto (\(sin \( 0.01745329251994 * \(t\) \)\)) show
72 428 moveto (#define) show
147 428 moveto (tand\(t\)) show
261 428 moveto (\(tan \( 0.01745329251994 * \(t\) \)\)) show
72 468 moveto (/* ----) show
147 468 moveto (sunpos - Compute the position of the sun. ---------) show
489 468 moveto (*/) show
72 488 moveto (/*) show
489 488 moveto (*/) show
72 508 moveto (/*) show
489 508 moveto (*/) show
72 528 moveto (/*) show
90 528 moveto (Description:) show
489 528 moveto (*/) show
72 548 moveto (/*) show
90 548 moveto ( Sunpos computes the position of the sun given the location) show
489 548 moveto (*/) show
72 568 moveto (/*) show
90 568 moveto ( \(longitude and latitude\) on the earth, the day of the year,) show
489 568 moveto (*/) show
72 588 moveto (/*) show
90 588 moveto ( and the time.  The origin \(i.e. 0,0,0 in world space\) is) show
489 588 moveto (*/) show
72 608 moveto (/*) show
90 608 moveto ( the specified location on the earth.  With an orientation) show
489 608 moveto (*/) show
72 628 moveto (/*) show
90 628 moveto ( angle of 0, east = -z, west = +z, south = +x, north = -x.) show
489 628 moveto (*/) show
72 648 moveto (/*) show
489 648 moveto (*/) show
72 668 moveto (/*) show
90 668 moveto (On entry:) show
432 668 moveto (*/) show
72 688 moveto (/*) show
90 688 moveto (    lon, lat= The longitude and latitude in degrees of the) show
489 688 moveto (*/) show
72 708 moveto (/*) show
108 708 moveto (      location of the origin on the earth.) show
432 708 moveto (*/) show
grestore
grestore
grestore
grestore
showpage
__NXsheetsavetoken restore
%%PageTrailer
%%DocumentFonts: Times-Roman
%%+ Courier
%%+ Helvetica

%%Page: 38 38
%%PageBoundingBox: 0 0 612 792
%%PageFonts: (atend)
%%BeginPageSetup
%%PaperSize: Letter
/__NXsheetsavetoken save def
0 0 translate
gsave
-20 32071 translate
 /__NXbasematrix matrix currentmatrix def
grestore
gsave
0 setgray
/Helvetica findfont 12 scalefont [1 0 0 -1 0 0] makefont
8
exch
defineuserobject
8 execuserobject setfont
1 setlinewidth
[1 0 0 -1 0 32080] concat
0 31288 translate
%%EndPageSetup
gsave
0 0 612 792 rectclip
gsave
gsave
1 setgray 0 0 612 792 rectfill
/Courier findfont 10 scalefont [1 0 0 -1 0 0] makefont
36
exch
defineuserobject
36 execuserobject setfont
0 setgray
72 78 moveto (/*) show
108 78 moveto (      \(i.e., West Lafayette, Indiana = 89-40\)) show
489 78 moveto (*/) show
72 98 moveto (/*) show
90 98 moveto (    lontz   = The longitude for the time zone in degrees.) show
489 98 moveto (*/) show
72 118 moveto (/*) show
108 118 moveto (      Each time zone is 15 degrees, advancing to the) show
432 118 moveto (*/) show
72 138 moveto (/*) show
108 138 moveto (      west.  For daylight savings, the longitude is) show
432 138 moveto (*/) show
72 158 moveto (/*) show
108 158 moveto (      advanced 1 timezone to the east.) show
489 158 moveto (*/) show
72 178 moveto (/*) show
108 178 moveto (      \(i.e., 75 for EST, 90 for CST, 75 for CDT\)) show
489 178 moveto (*/) show
72 198 moveto (/*) show
90 198 moveto (    time    = The time of the day in hours.) show
489 198 moveto (*/) show
72 218 moveto (/*) show
108 218 moveto (      \(i.e., 13.5 = 1:30 pm\)) show
489 218 moveto (*/) show
72 238 moveto (/*) show
90 238 moveto (    day     = The day of the year.) show
489 238 moveto (*/) show
72 258 moveto (/*) show
108 258 moveto (      \(i.e., 172 for June 21st\)) show
489 258 moveto (*/) show
72 278 moveto (/*) show
90 278 moveto (    gamma   = Orientation angle defining south, rotating the) show
489 278 moveto (*/) show
72 298 moveto (/*) show
108 298 moveto (      sweep of the sun.) show
489 298 moveto (*/) show
72 318 moveto (/*) show
108 318 moveto (      \(i.e, 14 = 14 degrees east of south\)) show
432 318 moveto (*/) show
72 338 moveto (/*) show
489 338 moveto (*/) show
72 358 moveto (/*) show
90 358 moveto (On return:) show
489 358 moveto (*/) show
72 378 moveto (/*) show
90 378 moveto (    pos     = Direction cosines of a vector pointing toward) show
489 378 moveto (*/) show
72 398 moveto (/*) show
108 398 moveto (      the sun from the origin.) show
489 398 moveto (*/) show
72 418 moveto (/*) show
489 418 moveto (*/) show
72 438 moveto (/*) show
90 438 moveto (Returns:  True if the sun is visible.) show
432 438 moveto (*/) show
72 458 moveto (/*) show
489 458 moveto (*/) show
72 478 moveto (/*) show
90 478 moveto (Author:) show
147 478 moveto (  Joe Cychosz) show
489 478 moveto (*/) show
72 498 moveto (/*) show
108 498 moveto (  Purdue University CADLAB) show
489 498 moveto (*/) show
72 518 moveto (/*) show
108 518 moveto (  Potter Engineering Center) show
489 518 moveto (*/) show
72 538 moveto (/*) show
108 538 moveto (  W. Lafayette, IN  47907) show
432 538 moveto (*/) show
72 558 moveto (/*) show
489 558 moveto (*/) show
72 578 moveto (/* ------------------------------------------------------------) show
489 578 moveto (*/) show
72 638 moveto (boolean) show
147 638 moveto (sunpos) show
261 638 moveto (\( lon, lat, lontz, time, day, gamma, pos\)) show
90 678 moveto (double) show
204 678 moveto (lon, lat;) show
261 678 moveto (/* Longitude, latitude) show
432 678 moveto (*/) show
90 698 moveto (double) show
204 698 moveto (lontz;) show
318 698 moveto (/* Longitude for timezone) show
489 698 moveto (*/) show
90 718 moveto (double) show
204 718 moveto (time;) show
318 718 moveto (/* Time of day) show
489 718 moveto (*/) show
grestore
grestore
grestore
grestore
showpage
__NXsheetsavetoken restore
%%PageTrailer
%%DocumentFonts: Courier
%%+ Helvetica

%%Page: 39 39
%%PageBoundingBox: 0 0 612 792
%%PageFonts: (atend)
%%BeginPageSetup
%%PaperSize: Letter
/__NXsheetsavetoken save def
0 0 translate
gsave
-20 32071 translate
 /__NXbasematrix matrix currentmatrix def
grestore
gsave
0 setgray
/Helvetica findfont 12 scalefont [1 0 0 -1 0 0] makefont
8
exch
defineuserobject
8 execuserobject setfont
1 setlinewidth
[1 0 0 -1 0 32080] concat
0 31288 translate
%%EndPageSetup
gsave
0 0 612 792 rectclip
gsave
gsave
1 setgray 0 0 612 792 rectfill
/Courier findfont 10 scalefont [1 0 0 -1 0 0] makefont
36
exch
defineuserobject
36 execuserobject setfont
0 setgray
90 88 moveto (int) show
204 88 moveto (day;) show
318 88 moveto (/* Day of the year) show
432 88 moveto (*/) show
90 108 moveto (double) show
204 108 moveto (gamma;) show
318 108 moveto (/* Orientation angle) show
489 108 moveto (*/) show
90 128 moveto (Vector3) show
204 128 moveto (*pos;) show
318 128 moveto (/* Position vector of sun) show
489 128 moveto (*/) show
72 168 moveto ({) show
147 168 moveto (/* Angles are in degrees, times are in hours.) show
432 168 moveto (*/) show
90 188 moveto (double) show
204 188 moveto (del;) show
318 188 moveto (/* Angle of declination) show
489 188 moveto (*/) show
90 208 moveto (double) show
204 208 moveto (b;) show
318 208 moveto (/* Time angle) show
489 208 moveto (*/) show
90 228 moveto (double) show
204 228 moveto (e;) show
318 228 moveto (/* Time) show
489 228 moveto (*/) show
90 248 moveto (double) show
204 248 moveto (w;) show
318 248 moveto (/* Hour angle) show
489 248 moveto (*/) show
90 268 moveto (double) show
204 268 moveto (we, gs;) show
90 288 moveto (double) show
204 288 moveto (phi;) show
90 308 moveto (double) show
204 308 moveto (ws;) show
318 308 moveto (/* Sunrise, sunset angle) show
489 308 moveto (*/) show
90 328 moveto (double) show
204 328 moveto (sunrise;) show
318 328 moveto (/* Sunrise time) show
489 328 moveto (*/) show
90 348 moveto (double) show
204 348 moveto (sunset;) show
318 348 moveto (/* Sunset time) show
489 348 moveto (*/) show
72 388 moveto (/*) show
90 388 moveto (Compute solar declination \(23.45 deg on June 21\)) show
489 388 moveto (*/) show
90 408 moveto (del = 23.45 * sind \(360.0 * \(284+day\) / 365\);) show
72 448 moveto (/*) show
90 448 moveto (Compute the hour angle in degrees.) show
489 448 moveto (*/) show
72 468 moveto (/*) show
489 468 moveto (*/) show
72 488 moveto (/*) show
90 488 moveto (w = 0 at solar noon, => 180 at midnight, + for am, - for pm.) show
489 488 moveto (*/) show
72 508 moveto (/*) show
90 508 moveto (1 hour = 15 degrees, w = 22.5 at 10:30 am \(solar\)) show
489 508 moveto (*/) show
90 528 moveto (b   = 360.0 * \(day-81\) / 364;) show
90 548 moveto (e   = \(9.87*sind\(2.0*b\) - 7.53*cosd\(b\) - 1.5*sind\(b\)\) / 60.;) show
90 568 moveto (w   = 180.0 - lontz + lon - 15.0*\(time+e\);) show
90 608 moveto (phi = acos \(sind\(lat\)*sind\(del\) + cosd\(lat\)*cosd\(del\)*cosd\(w\)\);) show
90 628 moveto (we  = acos \(tand\(del\) / tand\(lat\)\) * rad2deg;) show
90 648 moveto (gs  = asin \(cosd\(del\) * sind\(w\) / sin\(phi\)\);) show
90 668 moveto (if  \( w >  we \) gs =  pi - gs;) show
90 688 moveto (if  \( w < -we \) gs = -pi - gs;) show
grestore
grestore
grestore
grestore
showpage
__NXsheetsavetoken restore
%%PageTrailer
%%DocumentFonts: Courier
%%+ Helvetica

%%Page: 40 40
%%PageBoundingBox: 0 0 612 792
%%PageFonts: (atend)
%%BeginPageSetup
%%PaperSize: Letter
/__NXsheetsavetoken save def
0 0 translate
gsave
-20 32071 translate
 /__NXbasematrix matrix currentmatrix def
grestore
gsave
0 setgray
/Helvetica findfont 12 scalefont [1 0 0 -1 0 0] makefont
8
exch
defineuserobject
8 execuserobject setfont
1 setlinewidth
[1 0 0 -1 0 32080] concat
0 31288 translate
%%EndPageSetup
gsave
0 0 612 792 rectclip
gsave
gsave
1 setgray 0 0 612 792 rectfill
/Courier findfont 10 scalefont [1 0 0 -1 0 0] makefont
36
exch
defineuserobject
36 execuserobject setfont
0 setgray
72 80 moveto (/*) show
90 80 moveto (Compute the position of the sun.) show
489 80 moveto (*/) show
72 100 moveto (/*) show
489 100 moveto (*/) show
72 120 moveto (/*) show
90 120 moveto (For gamma = 0, the sun will rise at -z and set at +z. ) show
489 120 moveto (*/) show
90 140 moveto (pos->x =   cos \(gs + gamma*deg2rad\);) show
90 160 moveto (pos->y =   cos \(phi\);) show
90 180 moveto (pos->z = - sin \(gs - gamma*deg2rad\);) show
72 220 moveto (/*) show
90 220 moveto (Compute sunrise, sunset angle.) show
489 220 moveto (*/) show
90 240 moveto (ws = rad2deg * acos \(-tand\(lat\) * tand\(del\)\);) show
72 280 moveto (/*) show
90 280 moveto (Compute sunrise time and sunset time. ) show
489 280 moveto (*/) show
90 300 moveto (sunrise = \(180.0 - ws - lontz + lon\) / 15.0 - e;) show
90 320 moveto (sunset  = \(180.0 + ws - lontz + lon\) / 15.0 - e;) show
90 360 moveto (printf \(" sunpos: sun position: %f %f %f\\n", pos->x, pos->y, pos-) show
90 380 moveto (>z\);) show
90 400 moveto (printf \(" sunpos: sunrise time: %f\\n", sunrise\);) show
90 420 moveto (printf \(" sunpos: sunset  time: %f\\n", sunset\);) show
90 460 moveto (return \(time >= sunrise && time <= sunset\);) show
72 480 moveto (}) show
grestore
grestore
grestore
grestore
showpage
__NXsheetsavetoken restore
%%PageTrailer
%%DocumentFonts: Courier
%%+ Helvetica
%%Trailer
%%DocumentFonts: Courier-Oblique
%%+ Times-Bold
%%+ Times-Roman
%%+ Times-Italic
%%+ Courier
%%+ Times-BoldItalic
%%+ Helvetica
%%BoundingBox:0 0 612 792

